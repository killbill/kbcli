// Code generated by go-swagger; DO NOT EDIT.

package kbmodel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InvoicePaymentTransaction invoice payment transaction
// swagger:model InvoicePaymentTransaction
type InvoicePaymentTransaction struct {

	// adjustments
	Adjustments []*InvoiceItem `json:"adjustments"`

	// Transaction amount, required except for void operations
	Amount float64 `json:"amount,omitempty"`

	// audit logs
	AuditLogs []*AuditLog `json:"auditLogs"`

	// Amount currency (account currency unless specified)
	// Enum: [AED AFN ALL AMD ANG AOA ARS AUD AWG AZN BAM BBD BDT BGN BHD BIF BMD BND BOB BRL BSD BTN BWP BYR BZD CAD CDF CHF CLP CNY COP CRC CUC CUP CVE CZK DJF DKK DOP DZD EGP ERN ETB EUR FJD FKP GBP GEL GGP GHS GIP GMD GNF GTQ GYD HKD HNL HRK HTG HUF IDR ILS IMP INR IQD IRR ISK JEP JMD JOD JPY KES KGS KHR KMF KPW KRW KWD KYD KZT LAK LBP LKR LRD LSL LTL LVL LYD MAD MDL MGA MKD MMK MNT MOP MRO MUR MVR MWK MXN MYR MZN NAD NGN NIO NOK NPR NZD OMR PAB PEN PGK PHP PKR PLN PYG QAR RON RSD RUB RWF SAR SBD SCR SDG SEK SGD SHP SLL SOS SPL SRD STD SVC SYP SZL THB TJS TMT TND TOP TRY TTD TVD TWD TZS UAH UGX USD UYU UZS VEF VND VUV WST XAF XCD XDR XOF XPF YER ZAR ZMW ZWD BTC]
	Currency InvoicePaymentTransactionCurrencyEnum `json:"currency,omitempty"`

	// effective date
	// Format: date-time
	EffectiveDate strfmt.DateTime `json:"effectiveDate,omitempty"`

	// first payment reference Id
	FirstPaymentReferenceID string `json:"firstPaymentReferenceId,omitempty"`

	// gateway error code
	GatewayErrorCode string `json:"gatewayErrorCode,omitempty"`

	// gateway error msg
	GatewayErrorMsg string `json:"gatewayErrorMsg,omitempty"`

	// is adjusted
	IsAdjusted bool `json:"isAdjusted,omitempty"`

	// payment external key
	PaymentExternalKey string `json:"paymentExternalKey,omitempty"`

	// Associated payment id, required when notifying state transitions
	// Format: uuid
	PaymentID strfmt.UUID `json:"paymentId,omitempty"`

	// processed amount
	ProcessedAmount float64 `json:"processedAmount,omitempty"`

	// processed currency
	// Enum: [AED AFN ALL AMD ANG AOA ARS AUD AWG AZN BAM BBD BDT BGN BHD BIF BMD BND BOB BRL BSD BTN BWP BYR BZD CAD CDF CHF CLP CNY COP CRC CUC CUP CVE CZK DJF DKK DOP DZD EGP ERN ETB EUR FJD FKP GBP GEL GGP GHS GIP GMD GNF GTQ GYD HKD HNL HRK HTG HUF IDR ILS IMP INR IQD IRR ISK JEP JMD JOD JPY KES KGS KHR KMF KPW KRW KWD KYD KZT LAK LBP LKR LRD LSL LTL LVL LYD MAD MDL MGA MKD MMK MNT MOP MRO MUR MVR MWK MXN MYR MZN NAD NGN NIO NOK NPR NZD OMR PAB PEN PGK PHP PKR PLN PYG QAR RON RSD RUB RWF SAR SBD SCR SDG SEK SGD SHP SLL SOS SPL SRD STD SVC SYP SZL THB TJS TMT TND TOP TRY TTD TVD TWD TZS UAH UGX USD UYU UZS VEF VND VUV WST XAF XCD XDR XOF XPF YER ZAR ZMW ZWD BTC]
	ProcessedCurrency InvoicePaymentTransactionProcessedCurrencyEnum `json:"processedCurrency,omitempty"`

	// properties
	Properties []*PluginProperty `json:"properties"`

	// second payment reference Id
	SecondPaymentReferenceID string `json:"secondPaymentReferenceId,omitempty"`

	// Transaction status, required for state change notifications
	// Enum: [SUCCESS UNKNOWN PENDING PAYMENT_FAILURE PLUGIN_FAILURE PAYMENT_SYSTEM_OFF]
	Status InvoicePaymentTransactionStatusEnum `json:"status,omitempty"`

	// transaction external key
	TransactionExternalKey string `json:"transactionExternalKey,omitempty"`

	// transaction Id
	// Format: uuid
	TransactionID strfmt.UUID `json:"transactionId,omitempty"`

	// transaction type
	// Enum: [AUTHORIZE CAPTURE CHARGEBACK CREDIT PURCHASE REFUND VOID]
	TransactionType InvoicePaymentTransactionTransactionTypeEnum `json:"transactionType,omitempty"`
}

// Validate validates this invoice payment transaction
func (m *InvoicePaymentTransaction) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAdjustments(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAuditLogs(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEffectiveDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePaymentID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProcessedCurrency(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTransactionID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTransactionType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InvoicePaymentTransaction) validateAdjustments(formats strfmt.Registry) error {

	if swag.IsZero(m.Adjustments) { // not required
		return nil
	}

	for i := 0; i < len(m.Adjustments); i++ {
		if swag.IsZero(m.Adjustments[i]) { // not required
			continue
		}

		if m.Adjustments[i] != nil {
			if err := m.Adjustments[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("adjustments" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *InvoicePaymentTransaction) validateAuditLogs(formats strfmt.Registry) error {

	if swag.IsZero(m.AuditLogs) { // not required
		return nil
	}

	for i := 0; i < len(m.AuditLogs); i++ {
		if swag.IsZero(m.AuditLogs[i]) { // not required
			continue
		}

		if m.AuditLogs[i] != nil {
			if err := m.AuditLogs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("auditLogs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var invoicePaymentTransactionTypeCurrencyPropEnum []interface{}

func init() {
	var res []InvoicePaymentTransactionCurrencyEnum
	if err := json.Unmarshal([]byte(`["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD","BTC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoicePaymentTransactionTypeCurrencyPropEnum = append(invoicePaymentTransactionTypeCurrencyPropEnum, v)
	}
}

type InvoicePaymentTransactionCurrencyEnum string

const (

	// InvoicePaymentTransactionCurrencyAED captures enum value "AED"
	InvoicePaymentTransactionCurrencyAED InvoicePaymentTransactionCurrencyEnum = "AED"

	// InvoicePaymentTransactionCurrencyAFN captures enum value "AFN"
	InvoicePaymentTransactionCurrencyAFN InvoicePaymentTransactionCurrencyEnum = "AFN"

	// InvoicePaymentTransactionCurrencyALL captures enum value "ALL"
	InvoicePaymentTransactionCurrencyALL InvoicePaymentTransactionCurrencyEnum = "ALL"

	// InvoicePaymentTransactionCurrencyAMD captures enum value "AMD"
	InvoicePaymentTransactionCurrencyAMD InvoicePaymentTransactionCurrencyEnum = "AMD"

	// InvoicePaymentTransactionCurrencyANG captures enum value "ANG"
	InvoicePaymentTransactionCurrencyANG InvoicePaymentTransactionCurrencyEnum = "ANG"

	// InvoicePaymentTransactionCurrencyAOA captures enum value "AOA"
	InvoicePaymentTransactionCurrencyAOA InvoicePaymentTransactionCurrencyEnum = "AOA"

	// InvoicePaymentTransactionCurrencyARS captures enum value "ARS"
	InvoicePaymentTransactionCurrencyARS InvoicePaymentTransactionCurrencyEnum = "ARS"

	// InvoicePaymentTransactionCurrencyAUD captures enum value "AUD"
	InvoicePaymentTransactionCurrencyAUD InvoicePaymentTransactionCurrencyEnum = "AUD"

	// InvoicePaymentTransactionCurrencyAWG captures enum value "AWG"
	InvoicePaymentTransactionCurrencyAWG InvoicePaymentTransactionCurrencyEnum = "AWG"

	// InvoicePaymentTransactionCurrencyAZN captures enum value "AZN"
	InvoicePaymentTransactionCurrencyAZN InvoicePaymentTransactionCurrencyEnum = "AZN"

	// InvoicePaymentTransactionCurrencyBAM captures enum value "BAM"
	InvoicePaymentTransactionCurrencyBAM InvoicePaymentTransactionCurrencyEnum = "BAM"

	// InvoicePaymentTransactionCurrencyBBD captures enum value "BBD"
	InvoicePaymentTransactionCurrencyBBD InvoicePaymentTransactionCurrencyEnum = "BBD"

	// InvoicePaymentTransactionCurrencyBDT captures enum value "BDT"
	InvoicePaymentTransactionCurrencyBDT InvoicePaymentTransactionCurrencyEnum = "BDT"

	// InvoicePaymentTransactionCurrencyBGN captures enum value "BGN"
	InvoicePaymentTransactionCurrencyBGN InvoicePaymentTransactionCurrencyEnum = "BGN"

	// InvoicePaymentTransactionCurrencyBHD captures enum value "BHD"
	InvoicePaymentTransactionCurrencyBHD InvoicePaymentTransactionCurrencyEnum = "BHD"

	// InvoicePaymentTransactionCurrencyBIF captures enum value "BIF"
	InvoicePaymentTransactionCurrencyBIF InvoicePaymentTransactionCurrencyEnum = "BIF"

	// InvoicePaymentTransactionCurrencyBMD captures enum value "BMD"
	InvoicePaymentTransactionCurrencyBMD InvoicePaymentTransactionCurrencyEnum = "BMD"

	// InvoicePaymentTransactionCurrencyBND captures enum value "BND"
	InvoicePaymentTransactionCurrencyBND InvoicePaymentTransactionCurrencyEnum = "BND"

	// InvoicePaymentTransactionCurrencyBOB captures enum value "BOB"
	InvoicePaymentTransactionCurrencyBOB InvoicePaymentTransactionCurrencyEnum = "BOB"

	// InvoicePaymentTransactionCurrencyBRL captures enum value "BRL"
	InvoicePaymentTransactionCurrencyBRL InvoicePaymentTransactionCurrencyEnum = "BRL"

	// InvoicePaymentTransactionCurrencyBSD captures enum value "BSD"
	InvoicePaymentTransactionCurrencyBSD InvoicePaymentTransactionCurrencyEnum = "BSD"

	// InvoicePaymentTransactionCurrencyBTN captures enum value "BTN"
	InvoicePaymentTransactionCurrencyBTN InvoicePaymentTransactionCurrencyEnum = "BTN"

	// InvoicePaymentTransactionCurrencyBWP captures enum value "BWP"
	InvoicePaymentTransactionCurrencyBWP InvoicePaymentTransactionCurrencyEnum = "BWP"

	// InvoicePaymentTransactionCurrencyBYR captures enum value "BYR"
	InvoicePaymentTransactionCurrencyBYR InvoicePaymentTransactionCurrencyEnum = "BYR"

	// InvoicePaymentTransactionCurrencyBZD captures enum value "BZD"
	InvoicePaymentTransactionCurrencyBZD InvoicePaymentTransactionCurrencyEnum = "BZD"

	// InvoicePaymentTransactionCurrencyCAD captures enum value "CAD"
	InvoicePaymentTransactionCurrencyCAD InvoicePaymentTransactionCurrencyEnum = "CAD"

	// InvoicePaymentTransactionCurrencyCDF captures enum value "CDF"
	InvoicePaymentTransactionCurrencyCDF InvoicePaymentTransactionCurrencyEnum = "CDF"

	// InvoicePaymentTransactionCurrencyCHF captures enum value "CHF"
	InvoicePaymentTransactionCurrencyCHF InvoicePaymentTransactionCurrencyEnum = "CHF"

	// InvoicePaymentTransactionCurrencyCLP captures enum value "CLP"
	InvoicePaymentTransactionCurrencyCLP InvoicePaymentTransactionCurrencyEnum = "CLP"

	// InvoicePaymentTransactionCurrencyCNY captures enum value "CNY"
	InvoicePaymentTransactionCurrencyCNY InvoicePaymentTransactionCurrencyEnum = "CNY"

	// InvoicePaymentTransactionCurrencyCOP captures enum value "COP"
	InvoicePaymentTransactionCurrencyCOP InvoicePaymentTransactionCurrencyEnum = "COP"

	// InvoicePaymentTransactionCurrencyCRC captures enum value "CRC"
	InvoicePaymentTransactionCurrencyCRC InvoicePaymentTransactionCurrencyEnum = "CRC"

	// InvoicePaymentTransactionCurrencyCUC captures enum value "CUC"
	InvoicePaymentTransactionCurrencyCUC InvoicePaymentTransactionCurrencyEnum = "CUC"

	// InvoicePaymentTransactionCurrencyCUP captures enum value "CUP"
	InvoicePaymentTransactionCurrencyCUP InvoicePaymentTransactionCurrencyEnum = "CUP"

	// InvoicePaymentTransactionCurrencyCVE captures enum value "CVE"
	InvoicePaymentTransactionCurrencyCVE InvoicePaymentTransactionCurrencyEnum = "CVE"

	// InvoicePaymentTransactionCurrencyCZK captures enum value "CZK"
	InvoicePaymentTransactionCurrencyCZK InvoicePaymentTransactionCurrencyEnum = "CZK"

	// InvoicePaymentTransactionCurrencyDJF captures enum value "DJF"
	InvoicePaymentTransactionCurrencyDJF InvoicePaymentTransactionCurrencyEnum = "DJF"

	// InvoicePaymentTransactionCurrencyDKK captures enum value "DKK"
	InvoicePaymentTransactionCurrencyDKK InvoicePaymentTransactionCurrencyEnum = "DKK"

	// InvoicePaymentTransactionCurrencyDOP captures enum value "DOP"
	InvoicePaymentTransactionCurrencyDOP InvoicePaymentTransactionCurrencyEnum = "DOP"

	// InvoicePaymentTransactionCurrencyDZD captures enum value "DZD"
	InvoicePaymentTransactionCurrencyDZD InvoicePaymentTransactionCurrencyEnum = "DZD"

	// InvoicePaymentTransactionCurrencyEGP captures enum value "EGP"
	InvoicePaymentTransactionCurrencyEGP InvoicePaymentTransactionCurrencyEnum = "EGP"

	// InvoicePaymentTransactionCurrencyERN captures enum value "ERN"
	InvoicePaymentTransactionCurrencyERN InvoicePaymentTransactionCurrencyEnum = "ERN"

	// InvoicePaymentTransactionCurrencyETB captures enum value "ETB"
	InvoicePaymentTransactionCurrencyETB InvoicePaymentTransactionCurrencyEnum = "ETB"

	// InvoicePaymentTransactionCurrencyEUR captures enum value "EUR"
	InvoicePaymentTransactionCurrencyEUR InvoicePaymentTransactionCurrencyEnum = "EUR"

	// InvoicePaymentTransactionCurrencyFJD captures enum value "FJD"
	InvoicePaymentTransactionCurrencyFJD InvoicePaymentTransactionCurrencyEnum = "FJD"

	// InvoicePaymentTransactionCurrencyFKP captures enum value "FKP"
	InvoicePaymentTransactionCurrencyFKP InvoicePaymentTransactionCurrencyEnum = "FKP"

	// InvoicePaymentTransactionCurrencyGBP captures enum value "GBP"
	InvoicePaymentTransactionCurrencyGBP InvoicePaymentTransactionCurrencyEnum = "GBP"

	// InvoicePaymentTransactionCurrencyGEL captures enum value "GEL"
	InvoicePaymentTransactionCurrencyGEL InvoicePaymentTransactionCurrencyEnum = "GEL"

	// InvoicePaymentTransactionCurrencyGGP captures enum value "GGP"
	InvoicePaymentTransactionCurrencyGGP InvoicePaymentTransactionCurrencyEnum = "GGP"

	// InvoicePaymentTransactionCurrencyGHS captures enum value "GHS"
	InvoicePaymentTransactionCurrencyGHS InvoicePaymentTransactionCurrencyEnum = "GHS"

	// InvoicePaymentTransactionCurrencyGIP captures enum value "GIP"
	InvoicePaymentTransactionCurrencyGIP InvoicePaymentTransactionCurrencyEnum = "GIP"

	// InvoicePaymentTransactionCurrencyGMD captures enum value "GMD"
	InvoicePaymentTransactionCurrencyGMD InvoicePaymentTransactionCurrencyEnum = "GMD"

	// InvoicePaymentTransactionCurrencyGNF captures enum value "GNF"
	InvoicePaymentTransactionCurrencyGNF InvoicePaymentTransactionCurrencyEnum = "GNF"

	// InvoicePaymentTransactionCurrencyGTQ captures enum value "GTQ"
	InvoicePaymentTransactionCurrencyGTQ InvoicePaymentTransactionCurrencyEnum = "GTQ"

	// InvoicePaymentTransactionCurrencyGYD captures enum value "GYD"
	InvoicePaymentTransactionCurrencyGYD InvoicePaymentTransactionCurrencyEnum = "GYD"

	// InvoicePaymentTransactionCurrencyHKD captures enum value "HKD"
	InvoicePaymentTransactionCurrencyHKD InvoicePaymentTransactionCurrencyEnum = "HKD"

	// InvoicePaymentTransactionCurrencyHNL captures enum value "HNL"
	InvoicePaymentTransactionCurrencyHNL InvoicePaymentTransactionCurrencyEnum = "HNL"

	// InvoicePaymentTransactionCurrencyHRK captures enum value "HRK"
	InvoicePaymentTransactionCurrencyHRK InvoicePaymentTransactionCurrencyEnum = "HRK"

	// InvoicePaymentTransactionCurrencyHTG captures enum value "HTG"
	InvoicePaymentTransactionCurrencyHTG InvoicePaymentTransactionCurrencyEnum = "HTG"

	// InvoicePaymentTransactionCurrencyHUF captures enum value "HUF"
	InvoicePaymentTransactionCurrencyHUF InvoicePaymentTransactionCurrencyEnum = "HUF"

	// InvoicePaymentTransactionCurrencyIDR captures enum value "IDR"
	InvoicePaymentTransactionCurrencyIDR InvoicePaymentTransactionCurrencyEnum = "IDR"

	// InvoicePaymentTransactionCurrencyILS captures enum value "ILS"
	InvoicePaymentTransactionCurrencyILS InvoicePaymentTransactionCurrencyEnum = "ILS"

	// InvoicePaymentTransactionCurrencyIMP captures enum value "IMP"
	InvoicePaymentTransactionCurrencyIMP InvoicePaymentTransactionCurrencyEnum = "IMP"

	// InvoicePaymentTransactionCurrencyINR captures enum value "INR"
	InvoicePaymentTransactionCurrencyINR InvoicePaymentTransactionCurrencyEnum = "INR"

	// InvoicePaymentTransactionCurrencyIQD captures enum value "IQD"
	InvoicePaymentTransactionCurrencyIQD InvoicePaymentTransactionCurrencyEnum = "IQD"

	// InvoicePaymentTransactionCurrencyIRR captures enum value "IRR"
	InvoicePaymentTransactionCurrencyIRR InvoicePaymentTransactionCurrencyEnum = "IRR"

	// InvoicePaymentTransactionCurrencyISK captures enum value "ISK"
	InvoicePaymentTransactionCurrencyISK InvoicePaymentTransactionCurrencyEnum = "ISK"

	// InvoicePaymentTransactionCurrencyJEP captures enum value "JEP"
	InvoicePaymentTransactionCurrencyJEP InvoicePaymentTransactionCurrencyEnum = "JEP"

	// InvoicePaymentTransactionCurrencyJMD captures enum value "JMD"
	InvoicePaymentTransactionCurrencyJMD InvoicePaymentTransactionCurrencyEnum = "JMD"

	// InvoicePaymentTransactionCurrencyJOD captures enum value "JOD"
	InvoicePaymentTransactionCurrencyJOD InvoicePaymentTransactionCurrencyEnum = "JOD"

	// InvoicePaymentTransactionCurrencyJPY captures enum value "JPY"
	InvoicePaymentTransactionCurrencyJPY InvoicePaymentTransactionCurrencyEnum = "JPY"

	// InvoicePaymentTransactionCurrencyKES captures enum value "KES"
	InvoicePaymentTransactionCurrencyKES InvoicePaymentTransactionCurrencyEnum = "KES"

	// InvoicePaymentTransactionCurrencyKGS captures enum value "KGS"
	InvoicePaymentTransactionCurrencyKGS InvoicePaymentTransactionCurrencyEnum = "KGS"

	// InvoicePaymentTransactionCurrencyKHR captures enum value "KHR"
	InvoicePaymentTransactionCurrencyKHR InvoicePaymentTransactionCurrencyEnum = "KHR"

	// InvoicePaymentTransactionCurrencyKMF captures enum value "KMF"
	InvoicePaymentTransactionCurrencyKMF InvoicePaymentTransactionCurrencyEnum = "KMF"

	// InvoicePaymentTransactionCurrencyKPW captures enum value "KPW"
	InvoicePaymentTransactionCurrencyKPW InvoicePaymentTransactionCurrencyEnum = "KPW"

	// InvoicePaymentTransactionCurrencyKRW captures enum value "KRW"
	InvoicePaymentTransactionCurrencyKRW InvoicePaymentTransactionCurrencyEnum = "KRW"

	// InvoicePaymentTransactionCurrencyKWD captures enum value "KWD"
	InvoicePaymentTransactionCurrencyKWD InvoicePaymentTransactionCurrencyEnum = "KWD"

	// InvoicePaymentTransactionCurrencyKYD captures enum value "KYD"
	InvoicePaymentTransactionCurrencyKYD InvoicePaymentTransactionCurrencyEnum = "KYD"

	// InvoicePaymentTransactionCurrencyKZT captures enum value "KZT"
	InvoicePaymentTransactionCurrencyKZT InvoicePaymentTransactionCurrencyEnum = "KZT"

	// InvoicePaymentTransactionCurrencyLAK captures enum value "LAK"
	InvoicePaymentTransactionCurrencyLAK InvoicePaymentTransactionCurrencyEnum = "LAK"

	// InvoicePaymentTransactionCurrencyLBP captures enum value "LBP"
	InvoicePaymentTransactionCurrencyLBP InvoicePaymentTransactionCurrencyEnum = "LBP"

	// InvoicePaymentTransactionCurrencyLKR captures enum value "LKR"
	InvoicePaymentTransactionCurrencyLKR InvoicePaymentTransactionCurrencyEnum = "LKR"

	// InvoicePaymentTransactionCurrencyLRD captures enum value "LRD"
	InvoicePaymentTransactionCurrencyLRD InvoicePaymentTransactionCurrencyEnum = "LRD"

	// InvoicePaymentTransactionCurrencyLSL captures enum value "LSL"
	InvoicePaymentTransactionCurrencyLSL InvoicePaymentTransactionCurrencyEnum = "LSL"

	// InvoicePaymentTransactionCurrencyLTL captures enum value "LTL"
	InvoicePaymentTransactionCurrencyLTL InvoicePaymentTransactionCurrencyEnum = "LTL"

	// InvoicePaymentTransactionCurrencyLVL captures enum value "LVL"
	InvoicePaymentTransactionCurrencyLVL InvoicePaymentTransactionCurrencyEnum = "LVL"

	// InvoicePaymentTransactionCurrencyLYD captures enum value "LYD"
	InvoicePaymentTransactionCurrencyLYD InvoicePaymentTransactionCurrencyEnum = "LYD"

	// InvoicePaymentTransactionCurrencyMAD captures enum value "MAD"
	InvoicePaymentTransactionCurrencyMAD InvoicePaymentTransactionCurrencyEnum = "MAD"

	// InvoicePaymentTransactionCurrencyMDL captures enum value "MDL"
	InvoicePaymentTransactionCurrencyMDL InvoicePaymentTransactionCurrencyEnum = "MDL"

	// InvoicePaymentTransactionCurrencyMGA captures enum value "MGA"
	InvoicePaymentTransactionCurrencyMGA InvoicePaymentTransactionCurrencyEnum = "MGA"

	// InvoicePaymentTransactionCurrencyMKD captures enum value "MKD"
	InvoicePaymentTransactionCurrencyMKD InvoicePaymentTransactionCurrencyEnum = "MKD"

	// InvoicePaymentTransactionCurrencyMMK captures enum value "MMK"
	InvoicePaymentTransactionCurrencyMMK InvoicePaymentTransactionCurrencyEnum = "MMK"

	// InvoicePaymentTransactionCurrencyMNT captures enum value "MNT"
	InvoicePaymentTransactionCurrencyMNT InvoicePaymentTransactionCurrencyEnum = "MNT"

	// InvoicePaymentTransactionCurrencyMOP captures enum value "MOP"
	InvoicePaymentTransactionCurrencyMOP InvoicePaymentTransactionCurrencyEnum = "MOP"

	// InvoicePaymentTransactionCurrencyMRO captures enum value "MRO"
	InvoicePaymentTransactionCurrencyMRO InvoicePaymentTransactionCurrencyEnum = "MRO"

	// InvoicePaymentTransactionCurrencyMUR captures enum value "MUR"
	InvoicePaymentTransactionCurrencyMUR InvoicePaymentTransactionCurrencyEnum = "MUR"

	// InvoicePaymentTransactionCurrencyMVR captures enum value "MVR"
	InvoicePaymentTransactionCurrencyMVR InvoicePaymentTransactionCurrencyEnum = "MVR"

	// InvoicePaymentTransactionCurrencyMWK captures enum value "MWK"
	InvoicePaymentTransactionCurrencyMWK InvoicePaymentTransactionCurrencyEnum = "MWK"

	// InvoicePaymentTransactionCurrencyMXN captures enum value "MXN"
	InvoicePaymentTransactionCurrencyMXN InvoicePaymentTransactionCurrencyEnum = "MXN"

	// InvoicePaymentTransactionCurrencyMYR captures enum value "MYR"
	InvoicePaymentTransactionCurrencyMYR InvoicePaymentTransactionCurrencyEnum = "MYR"

	// InvoicePaymentTransactionCurrencyMZN captures enum value "MZN"
	InvoicePaymentTransactionCurrencyMZN InvoicePaymentTransactionCurrencyEnum = "MZN"

	// InvoicePaymentTransactionCurrencyNAD captures enum value "NAD"
	InvoicePaymentTransactionCurrencyNAD InvoicePaymentTransactionCurrencyEnum = "NAD"

	// InvoicePaymentTransactionCurrencyNGN captures enum value "NGN"
	InvoicePaymentTransactionCurrencyNGN InvoicePaymentTransactionCurrencyEnum = "NGN"

	// InvoicePaymentTransactionCurrencyNIO captures enum value "NIO"
	InvoicePaymentTransactionCurrencyNIO InvoicePaymentTransactionCurrencyEnum = "NIO"

	// InvoicePaymentTransactionCurrencyNOK captures enum value "NOK"
	InvoicePaymentTransactionCurrencyNOK InvoicePaymentTransactionCurrencyEnum = "NOK"

	// InvoicePaymentTransactionCurrencyNPR captures enum value "NPR"
	InvoicePaymentTransactionCurrencyNPR InvoicePaymentTransactionCurrencyEnum = "NPR"

	// InvoicePaymentTransactionCurrencyNZD captures enum value "NZD"
	InvoicePaymentTransactionCurrencyNZD InvoicePaymentTransactionCurrencyEnum = "NZD"

	// InvoicePaymentTransactionCurrencyOMR captures enum value "OMR"
	InvoicePaymentTransactionCurrencyOMR InvoicePaymentTransactionCurrencyEnum = "OMR"

	// InvoicePaymentTransactionCurrencyPAB captures enum value "PAB"
	InvoicePaymentTransactionCurrencyPAB InvoicePaymentTransactionCurrencyEnum = "PAB"

	// InvoicePaymentTransactionCurrencyPEN captures enum value "PEN"
	InvoicePaymentTransactionCurrencyPEN InvoicePaymentTransactionCurrencyEnum = "PEN"

	// InvoicePaymentTransactionCurrencyPGK captures enum value "PGK"
	InvoicePaymentTransactionCurrencyPGK InvoicePaymentTransactionCurrencyEnum = "PGK"

	// InvoicePaymentTransactionCurrencyPHP captures enum value "PHP"
	InvoicePaymentTransactionCurrencyPHP InvoicePaymentTransactionCurrencyEnum = "PHP"

	// InvoicePaymentTransactionCurrencyPKR captures enum value "PKR"
	InvoicePaymentTransactionCurrencyPKR InvoicePaymentTransactionCurrencyEnum = "PKR"

	// InvoicePaymentTransactionCurrencyPLN captures enum value "PLN"
	InvoicePaymentTransactionCurrencyPLN InvoicePaymentTransactionCurrencyEnum = "PLN"

	// InvoicePaymentTransactionCurrencyPYG captures enum value "PYG"
	InvoicePaymentTransactionCurrencyPYG InvoicePaymentTransactionCurrencyEnum = "PYG"

	// InvoicePaymentTransactionCurrencyQAR captures enum value "QAR"
	InvoicePaymentTransactionCurrencyQAR InvoicePaymentTransactionCurrencyEnum = "QAR"

	// InvoicePaymentTransactionCurrencyRON captures enum value "RON"
	InvoicePaymentTransactionCurrencyRON InvoicePaymentTransactionCurrencyEnum = "RON"

	// InvoicePaymentTransactionCurrencyRSD captures enum value "RSD"
	InvoicePaymentTransactionCurrencyRSD InvoicePaymentTransactionCurrencyEnum = "RSD"

	// InvoicePaymentTransactionCurrencyRUB captures enum value "RUB"
	InvoicePaymentTransactionCurrencyRUB InvoicePaymentTransactionCurrencyEnum = "RUB"

	// InvoicePaymentTransactionCurrencyRWF captures enum value "RWF"
	InvoicePaymentTransactionCurrencyRWF InvoicePaymentTransactionCurrencyEnum = "RWF"

	// InvoicePaymentTransactionCurrencySAR captures enum value "SAR"
	InvoicePaymentTransactionCurrencySAR InvoicePaymentTransactionCurrencyEnum = "SAR"

	// InvoicePaymentTransactionCurrencySBD captures enum value "SBD"
	InvoicePaymentTransactionCurrencySBD InvoicePaymentTransactionCurrencyEnum = "SBD"

	// InvoicePaymentTransactionCurrencySCR captures enum value "SCR"
	InvoicePaymentTransactionCurrencySCR InvoicePaymentTransactionCurrencyEnum = "SCR"

	// InvoicePaymentTransactionCurrencySDG captures enum value "SDG"
	InvoicePaymentTransactionCurrencySDG InvoicePaymentTransactionCurrencyEnum = "SDG"

	// InvoicePaymentTransactionCurrencySEK captures enum value "SEK"
	InvoicePaymentTransactionCurrencySEK InvoicePaymentTransactionCurrencyEnum = "SEK"

	// InvoicePaymentTransactionCurrencySGD captures enum value "SGD"
	InvoicePaymentTransactionCurrencySGD InvoicePaymentTransactionCurrencyEnum = "SGD"

	// InvoicePaymentTransactionCurrencySHP captures enum value "SHP"
	InvoicePaymentTransactionCurrencySHP InvoicePaymentTransactionCurrencyEnum = "SHP"

	// InvoicePaymentTransactionCurrencySLL captures enum value "SLL"
	InvoicePaymentTransactionCurrencySLL InvoicePaymentTransactionCurrencyEnum = "SLL"

	// InvoicePaymentTransactionCurrencySOS captures enum value "SOS"
	InvoicePaymentTransactionCurrencySOS InvoicePaymentTransactionCurrencyEnum = "SOS"

	// InvoicePaymentTransactionCurrencySPL captures enum value "SPL"
	InvoicePaymentTransactionCurrencySPL InvoicePaymentTransactionCurrencyEnum = "SPL"

	// InvoicePaymentTransactionCurrencySRD captures enum value "SRD"
	InvoicePaymentTransactionCurrencySRD InvoicePaymentTransactionCurrencyEnum = "SRD"

	// InvoicePaymentTransactionCurrencySTD captures enum value "STD"
	InvoicePaymentTransactionCurrencySTD InvoicePaymentTransactionCurrencyEnum = "STD"

	// InvoicePaymentTransactionCurrencySVC captures enum value "SVC"
	InvoicePaymentTransactionCurrencySVC InvoicePaymentTransactionCurrencyEnum = "SVC"

	// InvoicePaymentTransactionCurrencySYP captures enum value "SYP"
	InvoicePaymentTransactionCurrencySYP InvoicePaymentTransactionCurrencyEnum = "SYP"

	// InvoicePaymentTransactionCurrencySZL captures enum value "SZL"
	InvoicePaymentTransactionCurrencySZL InvoicePaymentTransactionCurrencyEnum = "SZL"

	// InvoicePaymentTransactionCurrencyTHB captures enum value "THB"
	InvoicePaymentTransactionCurrencyTHB InvoicePaymentTransactionCurrencyEnum = "THB"

	// InvoicePaymentTransactionCurrencyTJS captures enum value "TJS"
	InvoicePaymentTransactionCurrencyTJS InvoicePaymentTransactionCurrencyEnum = "TJS"

	// InvoicePaymentTransactionCurrencyTMT captures enum value "TMT"
	InvoicePaymentTransactionCurrencyTMT InvoicePaymentTransactionCurrencyEnum = "TMT"

	// InvoicePaymentTransactionCurrencyTND captures enum value "TND"
	InvoicePaymentTransactionCurrencyTND InvoicePaymentTransactionCurrencyEnum = "TND"

	// InvoicePaymentTransactionCurrencyTOP captures enum value "TOP"
	InvoicePaymentTransactionCurrencyTOP InvoicePaymentTransactionCurrencyEnum = "TOP"

	// InvoicePaymentTransactionCurrencyTRY captures enum value "TRY"
	InvoicePaymentTransactionCurrencyTRY InvoicePaymentTransactionCurrencyEnum = "TRY"

	// InvoicePaymentTransactionCurrencyTTD captures enum value "TTD"
	InvoicePaymentTransactionCurrencyTTD InvoicePaymentTransactionCurrencyEnum = "TTD"

	// InvoicePaymentTransactionCurrencyTVD captures enum value "TVD"
	InvoicePaymentTransactionCurrencyTVD InvoicePaymentTransactionCurrencyEnum = "TVD"

	// InvoicePaymentTransactionCurrencyTWD captures enum value "TWD"
	InvoicePaymentTransactionCurrencyTWD InvoicePaymentTransactionCurrencyEnum = "TWD"

	// InvoicePaymentTransactionCurrencyTZS captures enum value "TZS"
	InvoicePaymentTransactionCurrencyTZS InvoicePaymentTransactionCurrencyEnum = "TZS"

	// InvoicePaymentTransactionCurrencyUAH captures enum value "UAH"
	InvoicePaymentTransactionCurrencyUAH InvoicePaymentTransactionCurrencyEnum = "UAH"

	// InvoicePaymentTransactionCurrencyUGX captures enum value "UGX"
	InvoicePaymentTransactionCurrencyUGX InvoicePaymentTransactionCurrencyEnum = "UGX"

	// InvoicePaymentTransactionCurrencyUSD captures enum value "USD"
	InvoicePaymentTransactionCurrencyUSD InvoicePaymentTransactionCurrencyEnum = "USD"

	// InvoicePaymentTransactionCurrencyUYU captures enum value "UYU"
	InvoicePaymentTransactionCurrencyUYU InvoicePaymentTransactionCurrencyEnum = "UYU"

	// InvoicePaymentTransactionCurrencyUZS captures enum value "UZS"
	InvoicePaymentTransactionCurrencyUZS InvoicePaymentTransactionCurrencyEnum = "UZS"

	// InvoicePaymentTransactionCurrencyVEF captures enum value "VEF"
	InvoicePaymentTransactionCurrencyVEF InvoicePaymentTransactionCurrencyEnum = "VEF"

	// InvoicePaymentTransactionCurrencyVND captures enum value "VND"
	InvoicePaymentTransactionCurrencyVND InvoicePaymentTransactionCurrencyEnum = "VND"

	// InvoicePaymentTransactionCurrencyVUV captures enum value "VUV"
	InvoicePaymentTransactionCurrencyVUV InvoicePaymentTransactionCurrencyEnum = "VUV"

	// InvoicePaymentTransactionCurrencyWST captures enum value "WST"
	InvoicePaymentTransactionCurrencyWST InvoicePaymentTransactionCurrencyEnum = "WST"

	// InvoicePaymentTransactionCurrencyXAF captures enum value "XAF"
	InvoicePaymentTransactionCurrencyXAF InvoicePaymentTransactionCurrencyEnum = "XAF"

	// InvoicePaymentTransactionCurrencyXCD captures enum value "XCD"
	InvoicePaymentTransactionCurrencyXCD InvoicePaymentTransactionCurrencyEnum = "XCD"

	// InvoicePaymentTransactionCurrencyXDR captures enum value "XDR"
	InvoicePaymentTransactionCurrencyXDR InvoicePaymentTransactionCurrencyEnum = "XDR"

	// InvoicePaymentTransactionCurrencyXOF captures enum value "XOF"
	InvoicePaymentTransactionCurrencyXOF InvoicePaymentTransactionCurrencyEnum = "XOF"

	// InvoicePaymentTransactionCurrencyXPF captures enum value "XPF"
	InvoicePaymentTransactionCurrencyXPF InvoicePaymentTransactionCurrencyEnum = "XPF"

	// InvoicePaymentTransactionCurrencyYER captures enum value "YER"
	InvoicePaymentTransactionCurrencyYER InvoicePaymentTransactionCurrencyEnum = "YER"

	// InvoicePaymentTransactionCurrencyZAR captures enum value "ZAR"
	InvoicePaymentTransactionCurrencyZAR InvoicePaymentTransactionCurrencyEnum = "ZAR"

	// InvoicePaymentTransactionCurrencyZMW captures enum value "ZMW"
	InvoicePaymentTransactionCurrencyZMW InvoicePaymentTransactionCurrencyEnum = "ZMW"

	// InvoicePaymentTransactionCurrencyZWD captures enum value "ZWD"
	InvoicePaymentTransactionCurrencyZWD InvoicePaymentTransactionCurrencyEnum = "ZWD"

	// InvoicePaymentTransactionCurrencyBTC captures enum value "BTC"
	InvoicePaymentTransactionCurrencyBTC InvoicePaymentTransactionCurrencyEnum = "BTC"
)

var InvoicePaymentTransactionCurrencyEnumValues = []string{
	"AED",
	"AFN",
	"ALL",
	"AMD",
	"ANG",
	"AOA",
	"ARS",
	"AUD",
	"AWG",
	"AZN",
	"BAM",
	"BBD",
	"BDT",
	"BGN",
	"BHD",
	"BIF",
	"BMD",
	"BND",
	"BOB",
	"BRL",
	"BSD",
	"BTN",
	"BWP",
	"BYR",
	"BZD",
	"CAD",
	"CDF",
	"CHF",
	"CLP",
	"CNY",
	"COP",
	"CRC",
	"CUC",
	"CUP",
	"CVE",
	"CZK",
	"DJF",
	"DKK",
	"DOP",
	"DZD",
	"EGP",
	"ERN",
	"ETB",
	"EUR",
	"FJD",
	"FKP",
	"GBP",
	"GEL",
	"GGP",
	"GHS",
	"GIP",
	"GMD",
	"GNF",
	"GTQ",
	"GYD",
	"HKD",
	"HNL",
	"HRK",
	"HTG",
	"HUF",
	"IDR",
	"ILS",
	"IMP",
	"INR",
	"IQD",
	"IRR",
	"ISK",
	"JEP",
	"JMD",
	"JOD",
	"JPY",
	"KES",
	"KGS",
	"KHR",
	"KMF",
	"KPW",
	"KRW",
	"KWD",
	"KYD",
	"KZT",
	"LAK",
	"LBP",
	"LKR",
	"LRD",
	"LSL",
	"LTL",
	"LVL",
	"LYD",
	"MAD",
	"MDL",
	"MGA",
	"MKD",
	"MMK",
	"MNT",
	"MOP",
	"MRO",
	"MUR",
	"MVR",
	"MWK",
	"MXN",
	"MYR",
	"MZN",
	"NAD",
	"NGN",
	"NIO",
	"NOK",
	"NPR",
	"NZD",
	"OMR",
	"PAB",
	"PEN",
	"PGK",
	"PHP",
	"PKR",
	"PLN",
	"PYG",
	"QAR",
	"RON",
	"RSD",
	"RUB",
	"RWF",
	"SAR",
	"SBD",
	"SCR",
	"SDG",
	"SEK",
	"SGD",
	"SHP",
	"SLL",
	"SOS",
	"SPL",
	"SRD",
	"STD",
	"SVC",
	"SYP",
	"SZL",
	"THB",
	"TJS",
	"TMT",
	"TND",
	"TOP",
	"TRY",
	"TTD",
	"TVD",
	"TWD",
	"TZS",
	"UAH",
	"UGX",
	"USD",
	"UYU",
	"UZS",
	"VEF",
	"VND",
	"VUV",
	"WST",
	"XAF",
	"XCD",
	"XDR",
	"XOF",
	"XPF",
	"YER",
	"ZAR",
	"ZMW",
	"ZWD",
	"BTC",
}

func (e InvoicePaymentTransactionCurrencyEnum) IsValid() bool {
	for _, v := range InvoicePaymentTransactionCurrencyEnumValues {
		if v == string(e) {
			return true
		}
	}
	return false
}

// prop value enum
func (m *InvoicePaymentTransaction) validateCurrencyEnum(path, location string, value InvoicePaymentTransactionCurrencyEnum) error {
	if err := validate.Enum(path, location, value, invoicePaymentTransactionTypeCurrencyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoicePaymentTransaction) validateCurrency(formats strfmt.Registry) error {

	if swag.IsZero(m.Currency) { // not required
		return nil
	}

	// value enum
	if err := m.validateCurrencyEnum("currency", "body", m.Currency); err != nil {
		return err
	}

	return nil
}

func (m *InvoicePaymentTransaction) validateEffectiveDate(formats strfmt.Registry) error {

	if swag.IsZero(m.EffectiveDate) { // not required
		return nil
	}

	if err := validate.FormatOf("effectiveDate", "body", "date-time", m.EffectiveDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *InvoicePaymentTransaction) validatePaymentID(formats strfmt.Registry) error {

	if swag.IsZero(m.PaymentID) { // not required
		return nil
	}

	if err := validate.FormatOf("paymentId", "body", "uuid", m.PaymentID.String(), formats); err != nil {
		return err
	}

	return nil
}

var invoicePaymentTransactionTypeProcessedCurrencyPropEnum []interface{}

func init() {
	var res []InvoicePaymentTransactionProcessedCurrencyEnum
	if err := json.Unmarshal([]byte(`["AED","AFN","ALL","AMD","ANG","AOA","ARS","AUD","AWG","AZN","BAM","BBD","BDT","BGN","BHD","BIF","BMD","BND","BOB","BRL","BSD","BTN","BWP","BYR","BZD","CAD","CDF","CHF","CLP","CNY","COP","CRC","CUC","CUP","CVE","CZK","DJF","DKK","DOP","DZD","EGP","ERN","ETB","EUR","FJD","FKP","GBP","GEL","GGP","GHS","GIP","GMD","GNF","GTQ","GYD","HKD","HNL","HRK","HTG","HUF","IDR","ILS","IMP","INR","IQD","IRR","ISK","JEP","JMD","JOD","JPY","KES","KGS","KHR","KMF","KPW","KRW","KWD","KYD","KZT","LAK","LBP","LKR","LRD","LSL","LTL","LVL","LYD","MAD","MDL","MGA","MKD","MMK","MNT","MOP","MRO","MUR","MVR","MWK","MXN","MYR","MZN","NAD","NGN","NIO","NOK","NPR","NZD","OMR","PAB","PEN","PGK","PHP","PKR","PLN","PYG","QAR","RON","RSD","RUB","RWF","SAR","SBD","SCR","SDG","SEK","SGD","SHP","SLL","SOS","SPL","SRD","STD","SVC","SYP","SZL","THB","TJS","TMT","TND","TOP","TRY","TTD","TVD","TWD","TZS","UAH","UGX","USD","UYU","UZS","VEF","VND","VUV","WST","XAF","XCD","XDR","XOF","XPF","YER","ZAR","ZMW","ZWD","BTC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoicePaymentTransactionTypeProcessedCurrencyPropEnum = append(invoicePaymentTransactionTypeProcessedCurrencyPropEnum, v)
	}
}

type InvoicePaymentTransactionProcessedCurrencyEnum string

const (

	// InvoicePaymentTransactionProcessedCurrencyAED captures enum value "AED"
	InvoicePaymentTransactionProcessedCurrencyAED InvoicePaymentTransactionProcessedCurrencyEnum = "AED"

	// InvoicePaymentTransactionProcessedCurrencyAFN captures enum value "AFN"
	InvoicePaymentTransactionProcessedCurrencyAFN InvoicePaymentTransactionProcessedCurrencyEnum = "AFN"

	// InvoicePaymentTransactionProcessedCurrencyALL captures enum value "ALL"
	InvoicePaymentTransactionProcessedCurrencyALL InvoicePaymentTransactionProcessedCurrencyEnum = "ALL"

	// InvoicePaymentTransactionProcessedCurrencyAMD captures enum value "AMD"
	InvoicePaymentTransactionProcessedCurrencyAMD InvoicePaymentTransactionProcessedCurrencyEnum = "AMD"

	// InvoicePaymentTransactionProcessedCurrencyANG captures enum value "ANG"
	InvoicePaymentTransactionProcessedCurrencyANG InvoicePaymentTransactionProcessedCurrencyEnum = "ANG"

	// InvoicePaymentTransactionProcessedCurrencyAOA captures enum value "AOA"
	InvoicePaymentTransactionProcessedCurrencyAOA InvoicePaymentTransactionProcessedCurrencyEnum = "AOA"

	// InvoicePaymentTransactionProcessedCurrencyARS captures enum value "ARS"
	InvoicePaymentTransactionProcessedCurrencyARS InvoicePaymentTransactionProcessedCurrencyEnum = "ARS"

	// InvoicePaymentTransactionProcessedCurrencyAUD captures enum value "AUD"
	InvoicePaymentTransactionProcessedCurrencyAUD InvoicePaymentTransactionProcessedCurrencyEnum = "AUD"

	// InvoicePaymentTransactionProcessedCurrencyAWG captures enum value "AWG"
	InvoicePaymentTransactionProcessedCurrencyAWG InvoicePaymentTransactionProcessedCurrencyEnum = "AWG"

	// InvoicePaymentTransactionProcessedCurrencyAZN captures enum value "AZN"
	InvoicePaymentTransactionProcessedCurrencyAZN InvoicePaymentTransactionProcessedCurrencyEnum = "AZN"

	// InvoicePaymentTransactionProcessedCurrencyBAM captures enum value "BAM"
	InvoicePaymentTransactionProcessedCurrencyBAM InvoicePaymentTransactionProcessedCurrencyEnum = "BAM"

	// InvoicePaymentTransactionProcessedCurrencyBBD captures enum value "BBD"
	InvoicePaymentTransactionProcessedCurrencyBBD InvoicePaymentTransactionProcessedCurrencyEnum = "BBD"

	// InvoicePaymentTransactionProcessedCurrencyBDT captures enum value "BDT"
	InvoicePaymentTransactionProcessedCurrencyBDT InvoicePaymentTransactionProcessedCurrencyEnum = "BDT"

	// InvoicePaymentTransactionProcessedCurrencyBGN captures enum value "BGN"
	InvoicePaymentTransactionProcessedCurrencyBGN InvoicePaymentTransactionProcessedCurrencyEnum = "BGN"

	// InvoicePaymentTransactionProcessedCurrencyBHD captures enum value "BHD"
	InvoicePaymentTransactionProcessedCurrencyBHD InvoicePaymentTransactionProcessedCurrencyEnum = "BHD"

	// InvoicePaymentTransactionProcessedCurrencyBIF captures enum value "BIF"
	InvoicePaymentTransactionProcessedCurrencyBIF InvoicePaymentTransactionProcessedCurrencyEnum = "BIF"

	// InvoicePaymentTransactionProcessedCurrencyBMD captures enum value "BMD"
	InvoicePaymentTransactionProcessedCurrencyBMD InvoicePaymentTransactionProcessedCurrencyEnum = "BMD"

	// InvoicePaymentTransactionProcessedCurrencyBND captures enum value "BND"
	InvoicePaymentTransactionProcessedCurrencyBND InvoicePaymentTransactionProcessedCurrencyEnum = "BND"

	// InvoicePaymentTransactionProcessedCurrencyBOB captures enum value "BOB"
	InvoicePaymentTransactionProcessedCurrencyBOB InvoicePaymentTransactionProcessedCurrencyEnum = "BOB"

	// InvoicePaymentTransactionProcessedCurrencyBRL captures enum value "BRL"
	InvoicePaymentTransactionProcessedCurrencyBRL InvoicePaymentTransactionProcessedCurrencyEnum = "BRL"

	// InvoicePaymentTransactionProcessedCurrencyBSD captures enum value "BSD"
	InvoicePaymentTransactionProcessedCurrencyBSD InvoicePaymentTransactionProcessedCurrencyEnum = "BSD"

	// InvoicePaymentTransactionProcessedCurrencyBTN captures enum value "BTN"
	InvoicePaymentTransactionProcessedCurrencyBTN InvoicePaymentTransactionProcessedCurrencyEnum = "BTN"

	// InvoicePaymentTransactionProcessedCurrencyBWP captures enum value "BWP"
	InvoicePaymentTransactionProcessedCurrencyBWP InvoicePaymentTransactionProcessedCurrencyEnum = "BWP"

	// InvoicePaymentTransactionProcessedCurrencyBYR captures enum value "BYR"
	InvoicePaymentTransactionProcessedCurrencyBYR InvoicePaymentTransactionProcessedCurrencyEnum = "BYR"

	// InvoicePaymentTransactionProcessedCurrencyBZD captures enum value "BZD"
	InvoicePaymentTransactionProcessedCurrencyBZD InvoicePaymentTransactionProcessedCurrencyEnum = "BZD"

	// InvoicePaymentTransactionProcessedCurrencyCAD captures enum value "CAD"
	InvoicePaymentTransactionProcessedCurrencyCAD InvoicePaymentTransactionProcessedCurrencyEnum = "CAD"

	// InvoicePaymentTransactionProcessedCurrencyCDF captures enum value "CDF"
	InvoicePaymentTransactionProcessedCurrencyCDF InvoicePaymentTransactionProcessedCurrencyEnum = "CDF"

	// InvoicePaymentTransactionProcessedCurrencyCHF captures enum value "CHF"
	InvoicePaymentTransactionProcessedCurrencyCHF InvoicePaymentTransactionProcessedCurrencyEnum = "CHF"

	// InvoicePaymentTransactionProcessedCurrencyCLP captures enum value "CLP"
	InvoicePaymentTransactionProcessedCurrencyCLP InvoicePaymentTransactionProcessedCurrencyEnum = "CLP"

	// InvoicePaymentTransactionProcessedCurrencyCNY captures enum value "CNY"
	InvoicePaymentTransactionProcessedCurrencyCNY InvoicePaymentTransactionProcessedCurrencyEnum = "CNY"

	// InvoicePaymentTransactionProcessedCurrencyCOP captures enum value "COP"
	InvoicePaymentTransactionProcessedCurrencyCOP InvoicePaymentTransactionProcessedCurrencyEnum = "COP"

	// InvoicePaymentTransactionProcessedCurrencyCRC captures enum value "CRC"
	InvoicePaymentTransactionProcessedCurrencyCRC InvoicePaymentTransactionProcessedCurrencyEnum = "CRC"

	// InvoicePaymentTransactionProcessedCurrencyCUC captures enum value "CUC"
	InvoicePaymentTransactionProcessedCurrencyCUC InvoicePaymentTransactionProcessedCurrencyEnum = "CUC"

	// InvoicePaymentTransactionProcessedCurrencyCUP captures enum value "CUP"
	InvoicePaymentTransactionProcessedCurrencyCUP InvoicePaymentTransactionProcessedCurrencyEnum = "CUP"

	// InvoicePaymentTransactionProcessedCurrencyCVE captures enum value "CVE"
	InvoicePaymentTransactionProcessedCurrencyCVE InvoicePaymentTransactionProcessedCurrencyEnum = "CVE"

	// InvoicePaymentTransactionProcessedCurrencyCZK captures enum value "CZK"
	InvoicePaymentTransactionProcessedCurrencyCZK InvoicePaymentTransactionProcessedCurrencyEnum = "CZK"

	// InvoicePaymentTransactionProcessedCurrencyDJF captures enum value "DJF"
	InvoicePaymentTransactionProcessedCurrencyDJF InvoicePaymentTransactionProcessedCurrencyEnum = "DJF"

	// InvoicePaymentTransactionProcessedCurrencyDKK captures enum value "DKK"
	InvoicePaymentTransactionProcessedCurrencyDKK InvoicePaymentTransactionProcessedCurrencyEnum = "DKK"

	// InvoicePaymentTransactionProcessedCurrencyDOP captures enum value "DOP"
	InvoicePaymentTransactionProcessedCurrencyDOP InvoicePaymentTransactionProcessedCurrencyEnum = "DOP"

	// InvoicePaymentTransactionProcessedCurrencyDZD captures enum value "DZD"
	InvoicePaymentTransactionProcessedCurrencyDZD InvoicePaymentTransactionProcessedCurrencyEnum = "DZD"

	// InvoicePaymentTransactionProcessedCurrencyEGP captures enum value "EGP"
	InvoicePaymentTransactionProcessedCurrencyEGP InvoicePaymentTransactionProcessedCurrencyEnum = "EGP"

	// InvoicePaymentTransactionProcessedCurrencyERN captures enum value "ERN"
	InvoicePaymentTransactionProcessedCurrencyERN InvoicePaymentTransactionProcessedCurrencyEnum = "ERN"

	// InvoicePaymentTransactionProcessedCurrencyETB captures enum value "ETB"
	InvoicePaymentTransactionProcessedCurrencyETB InvoicePaymentTransactionProcessedCurrencyEnum = "ETB"

	// InvoicePaymentTransactionProcessedCurrencyEUR captures enum value "EUR"
	InvoicePaymentTransactionProcessedCurrencyEUR InvoicePaymentTransactionProcessedCurrencyEnum = "EUR"

	// InvoicePaymentTransactionProcessedCurrencyFJD captures enum value "FJD"
	InvoicePaymentTransactionProcessedCurrencyFJD InvoicePaymentTransactionProcessedCurrencyEnum = "FJD"

	// InvoicePaymentTransactionProcessedCurrencyFKP captures enum value "FKP"
	InvoicePaymentTransactionProcessedCurrencyFKP InvoicePaymentTransactionProcessedCurrencyEnum = "FKP"

	// InvoicePaymentTransactionProcessedCurrencyGBP captures enum value "GBP"
	InvoicePaymentTransactionProcessedCurrencyGBP InvoicePaymentTransactionProcessedCurrencyEnum = "GBP"

	// InvoicePaymentTransactionProcessedCurrencyGEL captures enum value "GEL"
	InvoicePaymentTransactionProcessedCurrencyGEL InvoicePaymentTransactionProcessedCurrencyEnum = "GEL"

	// InvoicePaymentTransactionProcessedCurrencyGGP captures enum value "GGP"
	InvoicePaymentTransactionProcessedCurrencyGGP InvoicePaymentTransactionProcessedCurrencyEnum = "GGP"

	// InvoicePaymentTransactionProcessedCurrencyGHS captures enum value "GHS"
	InvoicePaymentTransactionProcessedCurrencyGHS InvoicePaymentTransactionProcessedCurrencyEnum = "GHS"

	// InvoicePaymentTransactionProcessedCurrencyGIP captures enum value "GIP"
	InvoicePaymentTransactionProcessedCurrencyGIP InvoicePaymentTransactionProcessedCurrencyEnum = "GIP"

	// InvoicePaymentTransactionProcessedCurrencyGMD captures enum value "GMD"
	InvoicePaymentTransactionProcessedCurrencyGMD InvoicePaymentTransactionProcessedCurrencyEnum = "GMD"

	// InvoicePaymentTransactionProcessedCurrencyGNF captures enum value "GNF"
	InvoicePaymentTransactionProcessedCurrencyGNF InvoicePaymentTransactionProcessedCurrencyEnum = "GNF"

	// InvoicePaymentTransactionProcessedCurrencyGTQ captures enum value "GTQ"
	InvoicePaymentTransactionProcessedCurrencyGTQ InvoicePaymentTransactionProcessedCurrencyEnum = "GTQ"

	// InvoicePaymentTransactionProcessedCurrencyGYD captures enum value "GYD"
	InvoicePaymentTransactionProcessedCurrencyGYD InvoicePaymentTransactionProcessedCurrencyEnum = "GYD"

	// InvoicePaymentTransactionProcessedCurrencyHKD captures enum value "HKD"
	InvoicePaymentTransactionProcessedCurrencyHKD InvoicePaymentTransactionProcessedCurrencyEnum = "HKD"

	// InvoicePaymentTransactionProcessedCurrencyHNL captures enum value "HNL"
	InvoicePaymentTransactionProcessedCurrencyHNL InvoicePaymentTransactionProcessedCurrencyEnum = "HNL"

	// InvoicePaymentTransactionProcessedCurrencyHRK captures enum value "HRK"
	InvoicePaymentTransactionProcessedCurrencyHRK InvoicePaymentTransactionProcessedCurrencyEnum = "HRK"

	// InvoicePaymentTransactionProcessedCurrencyHTG captures enum value "HTG"
	InvoicePaymentTransactionProcessedCurrencyHTG InvoicePaymentTransactionProcessedCurrencyEnum = "HTG"

	// InvoicePaymentTransactionProcessedCurrencyHUF captures enum value "HUF"
	InvoicePaymentTransactionProcessedCurrencyHUF InvoicePaymentTransactionProcessedCurrencyEnum = "HUF"

	// InvoicePaymentTransactionProcessedCurrencyIDR captures enum value "IDR"
	InvoicePaymentTransactionProcessedCurrencyIDR InvoicePaymentTransactionProcessedCurrencyEnum = "IDR"

	// InvoicePaymentTransactionProcessedCurrencyILS captures enum value "ILS"
	InvoicePaymentTransactionProcessedCurrencyILS InvoicePaymentTransactionProcessedCurrencyEnum = "ILS"

	// InvoicePaymentTransactionProcessedCurrencyIMP captures enum value "IMP"
	InvoicePaymentTransactionProcessedCurrencyIMP InvoicePaymentTransactionProcessedCurrencyEnum = "IMP"

	// InvoicePaymentTransactionProcessedCurrencyINR captures enum value "INR"
	InvoicePaymentTransactionProcessedCurrencyINR InvoicePaymentTransactionProcessedCurrencyEnum = "INR"

	// InvoicePaymentTransactionProcessedCurrencyIQD captures enum value "IQD"
	InvoicePaymentTransactionProcessedCurrencyIQD InvoicePaymentTransactionProcessedCurrencyEnum = "IQD"

	// InvoicePaymentTransactionProcessedCurrencyIRR captures enum value "IRR"
	InvoicePaymentTransactionProcessedCurrencyIRR InvoicePaymentTransactionProcessedCurrencyEnum = "IRR"

	// InvoicePaymentTransactionProcessedCurrencyISK captures enum value "ISK"
	InvoicePaymentTransactionProcessedCurrencyISK InvoicePaymentTransactionProcessedCurrencyEnum = "ISK"

	// InvoicePaymentTransactionProcessedCurrencyJEP captures enum value "JEP"
	InvoicePaymentTransactionProcessedCurrencyJEP InvoicePaymentTransactionProcessedCurrencyEnum = "JEP"

	// InvoicePaymentTransactionProcessedCurrencyJMD captures enum value "JMD"
	InvoicePaymentTransactionProcessedCurrencyJMD InvoicePaymentTransactionProcessedCurrencyEnum = "JMD"

	// InvoicePaymentTransactionProcessedCurrencyJOD captures enum value "JOD"
	InvoicePaymentTransactionProcessedCurrencyJOD InvoicePaymentTransactionProcessedCurrencyEnum = "JOD"

	// InvoicePaymentTransactionProcessedCurrencyJPY captures enum value "JPY"
	InvoicePaymentTransactionProcessedCurrencyJPY InvoicePaymentTransactionProcessedCurrencyEnum = "JPY"

	// InvoicePaymentTransactionProcessedCurrencyKES captures enum value "KES"
	InvoicePaymentTransactionProcessedCurrencyKES InvoicePaymentTransactionProcessedCurrencyEnum = "KES"

	// InvoicePaymentTransactionProcessedCurrencyKGS captures enum value "KGS"
	InvoicePaymentTransactionProcessedCurrencyKGS InvoicePaymentTransactionProcessedCurrencyEnum = "KGS"

	// InvoicePaymentTransactionProcessedCurrencyKHR captures enum value "KHR"
	InvoicePaymentTransactionProcessedCurrencyKHR InvoicePaymentTransactionProcessedCurrencyEnum = "KHR"

	// InvoicePaymentTransactionProcessedCurrencyKMF captures enum value "KMF"
	InvoicePaymentTransactionProcessedCurrencyKMF InvoicePaymentTransactionProcessedCurrencyEnum = "KMF"

	// InvoicePaymentTransactionProcessedCurrencyKPW captures enum value "KPW"
	InvoicePaymentTransactionProcessedCurrencyKPW InvoicePaymentTransactionProcessedCurrencyEnum = "KPW"

	// InvoicePaymentTransactionProcessedCurrencyKRW captures enum value "KRW"
	InvoicePaymentTransactionProcessedCurrencyKRW InvoicePaymentTransactionProcessedCurrencyEnum = "KRW"

	// InvoicePaymentTransactionProcessedCurrencyKWD captures enum value "KWD"
	InvoicePaymentTransactionProcessedCurrencyKWD InvoicePaymentTransactionProcessedCurrencyEnum = "KWD"

	// InvoicePaymentTransactionProcessedCurrencyKYD captures enum value "KYD"
	InvoicePaymentTransactionProcessedCurrencyKYD InvoicePaymentTransactionProcessedCurrencyEnum = "KYD"

	// InvoicePaymentTransactionProcessedCurrencyKZT captures enum value "KZT"
	InvoicePaymentTransactionProcessedCurrencyKZT InvoicePaymentTransactionProcessedCurrencyEnum = "KZT"

	// InvoicePaymentTransactionProcessedCurrencyLAK captures enum value "LAK"
	InvoicePaymentTransactionProcessedCurrencyLAK InvoicePaymentTransactionProcessedCurrencyEnum = "LAK"

	// InvoicePaymentTransactionProcessedCurrencyLBP captures enum value "LBP"
	InvoicePaymentTransactionProcessedCurrencyLBP InvoicePaymentTransactionProcessedCurrencyEnum = "LBP"

	// InvoicePaymentTransactionProcessedCurrencyLKR captures enum value "LKR"
	InvoicePaymentTransactionProcessedCurrencyLKR InvoicePaymentTransactionProcessedCurrencyEnum = "LKR"

	// InvoicePaymentTransactionProcessedCurrencyLRD captures enum value "LRD"
	InvoicePaymentTransactionProcessedCurrencyLRD InvoicePaymentTransactionProcessedCurrencyEnum = "LRD"

	// InvoicePaymentTransactionProcessedCurrencyLSL captures enum value "LSL"
	InvoicePaymentTransactionProcessedCurrencyLSL InvoicePaymentTransactionProcessedCurrencyEnum = "LSL"

	// InvoicePaymentTransactionProcessedCurrencyLTL captures enum value "LTL"
	InvoicePaymentTransactionProcessedCurrencyLTL InvoicePaymentTransactionProcessedCurrencyEnum = "LTL"

	// InvoicePaymentTransactionProcessedCurrencyLVL captures enum value "LVL"
	InvoicePaymentTransactionProcessedCurrencyLVL InvoicePaymentTransactionProcessedCurrencyEnum = "LVL"

	// InvoicePaymentTransactionProcessedCurrencyLYD captures enum value "LYD"
	InvoicePaymentTransactionProcessedCurrencyLYD InvoicePaymentTransactionProcessedCurrencyEnum = "LYD"

	// InvoicePaymentTransactionProcessedCurrencyMAD captures enum value "MAD"
	InvoicePaymentTransactionProcessedCurrencyMAD InvoicePaymentTransactionProcessedCurrencyEnum = "MAD"

	// InvoicePaymentTransactionProcessedCurrencyMDL captures enum value "MDL"
	InvoicePaymentTransactionProcessedCurrencyMDL InvoicePaymentTransactionProcessedCurrencyEnum = "MDL"

	// InvoicePaymentTransactionProcessedCurrencyMGA captures enum value "MGA"
	InvoicePaymentTransactionProcessedCurrencyMGA InvoicePaymentTransactionProcessedCurrencyEnum = "MGA"

	// InvoicePaymentTransactionProcessedCurrencyMKD captures enum value "MKD"
	InvoicePaymentTransactionProcessedCurrencyMKD InvoicePaymentTransactionProcessedCurrencyEnum = "MKD"

	// InvoicePaymentTransactionProcessedCurrencyMMK captures enum value "MMK"
	InvoicePaymentTransactionProcessedCurrencyMMK InvoicePaymentTransactionProcessedCurrencyEnum = "MMK"

	// InvoicePaymentTransactionProcessedCurrencyMNT captures enum value "MNT"
	InvoicePaymentTransactionProcessedCurrencyMNT InvoicePaymentTransactionProcessedCurrencyEnum = "MNT"

	// InvoicePaymentTransactionProcessedCurrencyMOP captures enum value "MOP"
	InvoicePaymentTransactionProcessedCurrencyMOP InvoicePaymentTransactionProcessedCurrencyEnum = "MOP"

	// InvoicePaymentTransactionProcessedCurrencyMRO captures enum value "MRO"
	InvoicePaymentTransactionProcessedCurrencyMRO InvoicePaymentTransactionProcessedCurrencyEnum = "MRO"

	// InvoicePaymentTransactionProcessedCurrencyMUR captures enum value "MUR"
	InvoicePaymentTransactionProcessedCurrencyMUR InvoicePaymentTransactionProcessedCurrencyEnum = "MUR"

	// InvoicePaymentTransactionProcessedCurrencyMVR captures enum value "MVR"
	InvoicePaymentTransactionProcessedCurrencyMVR InvoicePaymentTransactionProcessedCurrencyEnum = "MVR"

	// InvoicePaymentTransactionProcessedCurrencyMWK captures enum value "MWK"
	InvoicePaymentTransactionProcessedCurrencyMWK InvoicePaymentTransactionProcessedCurrencyEnum = "MWK"

	// InvoicePaymentTransactionProcessedCurrencyMXN captures enum value "MXN"
	InvoicePaymentTransactionProcessedCurrencyMXN InvoicePaymentTransactionProcessedCurrencyEnum = "MXN"

	// InvoicePaymentTransactionProcessedCurrencyMYR captures enum value "MYR"
	InvoicePaymentTransactionProcessedCurrencyMYR InvoicePaymentTransactionProcessedCurrencyEnum = "MYR"

	// InvoicePaymentTransactionProcessedCurrencyMZN captures enum value "MZN"
	InvoicePaymentTransactionProcessedCurrencyMZN InvoicePaymentTransactionProcessedCurrencyEnum = "MZN"

	// InvoicePaymentTransactionProcessedCurrencyNAD captures enum value "NAD"
	InvoicePaymentTransactionProcessedCurrencyNAD InvoicePaymentTransactionProcessedCurrencyEnum = "NAD"

	// InvoicePaymentTransactionProcessedCurrencyNGN captures enum value "NGN"
	InvoicePaymentTransactionProcessedCurrencyNGN InvoicePaymentTransactionProcessedCurrencyEnum = "NGN"

	// InvoicePaymentTransactionProcessedCurrencyNIO captures enum value "NIO"
	InvoicePaymentTransactionProcessedCurrencyNIO InvoicePaymentTransactionProcessedCurrencyEnum = "NIO"

	// InvoicePaymentTransactionProcessedCurrencyNOK captures enum value "NOK"
	InvoicePaymentTransactionProcessedCurrencyNOK InvoicePaymentTransactionProcessedCurrencyEnum = "NOK"

	// InvoicePaymentTransactionProcessedCurrencyNPR captures enum value "NPR"
	InvoicePaymentTransactionProcessedCurrencyNPR InvoicePaymentTransactionProcessedCurrencyEnum = "NPR"

	// InvoicePaymentTransactionProcessedCurrencyNZD captures enum value "NZD"
	InvoicePaymentTransactionProcessedCurrencyNZD InvoicePaymentTransactionProcessedCurrencyEnum = "NZD"

	// InvoicePaymentTransactionProcessedCurrencyOMR captures enum value "OMR"
	InvoicePaymentTransactionProcessedCurrencyOMR InvoicePaymentTransactionProcessedCurrencyEnum = "OMR"

	// InvoicePaymentTransactionProcessedCurrencyPAB captures enum value "PAB"
	InvoicePaymentTransactionProcessedCurrencyPAB InvoicePaymentTransactionProcessedCurrencyEnum = "PAB"

	// InvoicePaymentTransactionProcessedCurrencyPEN captures enum value "PEN"
	InvoicePaymentTransactionProcessedCurrencyPEN InvoicePaymentTransactionProcessedCurrencyEnum = "PEN"

	// InvoicePaymentTransactionProcessedCurrencyPGK captures enum value "PGK"
	InvoicePaymentTransactionProcessedCurrencyPGK InvoicePaymentTransactionProcessedCurrencyEnum = "PGK"

	// InvoicePaymentTransactionProcessedCurrencyPHP captures enum value "PHP"
	InvoicePaymentTransactionProcessedCurrencyPHP InvoicePaymentTransactionProcessedCurrencyEnum = "PHP"

	// InvoicePaymentTransactionProcessedCurrencyPKR captures enum value "PKR"
	InvoicePaymentTransactionProcessedCurrencyPKR InvoicePaymentTransactionProcessedCurrencyEnum = "PKR"

	// InvoicePaymentTransactionProcessedCurrencyPLN captures enum value "PLN"
	InvoicePaymentTransactionProcessedCurrencyPLN InvoicePaymentTransactionProcessedCurrencyEnum = "PLN"

	// InvoicePaymentTransactionProcessedCurrencyPYG captures enum value "PYG"
	InvoicePaymentTransactionProcessedCurrencyPYG InvoicePaymentTransactionProcessedCurrencyEnum = "PYG"

	// InvoicePaymentTransactionProcessedCurrencyQAR captures enum value "QAR"
	InvoicePaymentTransactionProcessedCurrencyQAR InvoicePaymentTransactionProcessedCurrencyEnum = "QAR"

	// InvoicePaymentTransactionProcessedCurrencyRON captures enum value "RON"
	InvoicePaymentTransactionProcessedCurrencyRON InvoicePaymentTransactionProcessedCurrencyEnum = "RON"

	// InvoicePaymentTransactionProcessedCurrencyRSD captures enum value "RSD"
	InvoicePaymentTransactionProcessedCurrencyRSD InvoicePaymentTransactionProcessedCurrencyEnum = "RSD"

	// InvoicePaymentTransactionProcessedCurrencyRUB captures enum value "RUB"
	InvoicePaymentTransactionProcessedCurrencyRUB InvoicePaymentTransactionProcessedCurrencyEnum = "RUB"

	// InvoicePaymentTransactionProcessedCurrencyRWF captures enum value "RWF"
	InvoicePaymentTransactionProcessedCurrencyRWF InvoicePaymentTransactionProcessedCurrencyEnum = "RWF"

	// InvoicePaymentTransactionProcessedCurrencySAR captures enum value "SAR"
	InvoicePaymentTransactionProcessedCurrencySAR InvoicePaymentTransactionProcessedCurrencyEnum = "SAR"

	// InvoicePaymentTransactionProcessedCurrencySBD captures enum value "SBD"
	InvoicePaymentTransactionProcessedCurrencySBD InvoicePaymentTransactionProcessedCurrencyEnum = "SBD"

	// InvoicePaymentTransactionProcessedCurrencySCR captures enum value "SCR"
	InvoicePaymentTransactionProcessedCurrencySCR InvoicePaymentTransactionProcessedCurrencyEnum = "SCR"

	// InvoicePaymentTransactionProcessedCurrencySDG captures enum value "SDG"
	InvoicePaymentTransactionProcessedCurrencySDG InvoicePaymentTransactionProcessedCurrencyEnum = "SDG"

	// InvoicePaymentTransactionProcessedCurrencySEK captures enum value "SEK"
	InvoicePaymentTransactionProcessedCurrencySEK InvoicePaymentTransactionProcessedCurrencyEnum = "SEK"

	// InvoicePaymentTransactionProcessedCurrencySGD captures enum value "SGD"
	InvoicePaymentTransactionProcessedCurrencySGD InvoicePaymentTransactionProcessedCurrencyEnum = "SGD"

	// InvoicePaymentTransactionProcessedCurrencySHP captures enum value "SHP"
	InvoicePaymentTransactionProcessedCurrencySHP InvoicePaymentTransactionProcessedCurrencyEnum = "SHP"

	// InvoicePaymentTransactionProcessedCurrencySLL captures enum value "SLL"
	InvoicePaymentTransactionProcessedCurrencySLL InvoicePaymentTransactionProcessedCurrencyEnum = "SLL"

	// InvoicePaymentTransactionProcessedCurrencySOS captures enum value "SOS"
	InvoicePaymentTransactionProcessedCurrencySOS InvoicePaymentTransactionProcessedCurrencyEnum = "SOS"

	// InvoicePaymentTransactionProcessedCurrencySPL captures enum value "SPL"
	InvoicePaymentTransactionProcessedCurrencySPL InvoicePaymentTransactionProcessedCurrencyEnum = "SPL"

	// InvoicePaymentTransactionProcessedCurrencySRD captures enum value "SRD"
	InvoicePaymentTransactionProcessedCurrencySRD InvoicePaymentTransactionProcessedCurrencyEnum = "SRD"

	// InvoicePaymentTransactionProcessedCurrencySTD captures enum value "STD"
	InvoicePaymentTransactionProcessedCurrencySTD InvoicePaymentTransactionProcessedCurrencyEnum = "STD"

	// InvoicePaymentTransactionProcessedCurrencySVC captures enum value "SVC"
	InvoicePaymentTransactionProcessedCurrencySVC InvoicePaymentTransactionProcessedCurrencyEnum = "SVC"

	// InvoicePaymentTransactionProcessedCurrencySYP captures enum value "SYP"
	InvoicePaymentTransactionProcessedCurrencySYP InvoicePaymentTransactionProcessedCurrencyEnum = "SYP"

	// InvoicePaymentTransactionProcessedCurrencySZL captures enum value "SZL"
	InvoicePaymentTransactionProcessedCurrencySZL InvoicePaymentTransactionProcessedCurrencyEnum = "SZL"

	// InvoicePaymentTransactionProcessedCurrencyTHB captures enum value "THB"
	InvoicePaymentTransactionProcessedCurrencyTHB InvoicePaymentTransactionProcessedCurrencyEnum = "THB"

	// InvoicePaymentTransactionProcessedCurrencyTJS captures enum value "TJS"
	InvoicePaymentTransactionProcessedCurrencyTJS InvoicePaymentTransactionProcessedCurrencyEnum = "TJS"

	// InvoicePaymentTransactionProcessedCurrencyTMT captures enum value "TMT"
	InvoicePaymentTransactionProcessedCurrencyTMT InvoicePaymentTransactionProcessedCurrencyEnum = "TMT"

	// InvoicePaymentTransactionProcessedCurrencyTND captures enum value "TND"
	InvoicePaymentTransactionProcessedCurrencyTND InvoicePaymentTransactionProcessedCurrencyEnum = "TND"

	// InvoicePaymentTransactionProcessedCurrencyTOP captures enum value "TOP"
	InvoicePaymentTransactionProcessedCurrencyTOP InvoicePaymentTransactionProcessedCurrencyEnum = "TOP"

	// InvoicePaymentTransactionProcessedCurrencyTRY captures enum value "TRY"
	InvoicePaymentTransactionProcessedCurrencyTRY InvoicePaymentTransactionProcessedCurrencyEnum = "TRY"

	// InvoicePaymentTransactionProcessedCurrencyTTD captures enum value "TTD"
	InvoicePaymentTransactionProcessedCurrencyTTD InvoicePaymentTransactionProcessedCurrencyEnum = "TTD"

	// InvoicePaymentTransactionProcessedCurrencyTVD captures enum value "TVD"
	InvoicePaymentTransactionProcessedCurrencyTVD InvoicePaymentTransactionProcessedCurrencyEnum = "TVD"

	// InvoicePaymentTransactionProcessedCurrencyTWD captures enum value "TWD"
	InvoicePaymentTransactionProcessedCurrencyTWD InvoicePaymentTransactionProcessedCurrencyEnum = "TWD"

	// InvoicePaymentTransactionProcessedCurrencyTZS captures enum value "TZS"
	InvoicePaymentTransactionProcessedCurrencyTZS InvoicePaymentTransactionProcessedCurrencyEnum = "TZS"

	// InvoicePaymentTransactionProcessedCurrencyUAH captures enum value "UAH"
	InvoicePaymentTransactionProcessedCurrencyUAH InvoicePaymentTransactionProcessedCurrencyEnum = "UAH"

	// InvoicePaymentTransactionProcessedCurrencyUGX captures enum value "UGX"
	InvoicePaymentTransactionProcessedCurrencyUGX InvoicePaymentTransactionProcessedCurrencyEnum = "UGX"

	// InvoicePaymentTransactionProcessedCurrencyUSD captures enum value "USD"
	InvoicePaymentTransactionProcessedCurrencyUSD InvoicePaymentTransactionProcessedCurrencyEnum = "USD"

	// InvoicePaymentTransactionProcessedCurrencyUYU captures enum value "UYU"
	InvoicePaymentTransactionProcessedCurrencyUYU InvoicePaymentTransactionProcessedCurrencyEnum = "UYU"

	// InvoicePaymentTransactionProcessedCurrencyUZS captures enum value "UZS"
	InvoicePaymentTransactionProcessedCurrencyUZS InvoicePaymentTransactionProcessedCurrencyEnum = "UZS"

	// InvoicePaymentTransactionProcessedCurrencyVEF captures enum value "VEF"
	InvoicePaymentTransactionProcessedCurrencyVEF InvoicePaymentTransactionProcessedCurrencyEnum = "VEF"

	// InvoicePaymentTransactionProcessedCurrencyVND captures enum value "VND"
	InvoicePaymentTransactionProcessedCurrencyVND InvoicePaymentTransactionProcessedCurrencyEnum = "VND"

	// InvoicePaymentTransactionProcessedCurrencyVUV captures enum value "VUV"
	InvoicePaymentTransactionProcessedCurrencyVUV InvoicePaymentTransactionProcessedCurrencyEnum = "VUV"

	// InvoicePaymentTransactionProcessedCurrencyWST captures enum value "WST"
	InvoicePaymentTransactionProcessedCurrencyWST InvoicePaymentTransactionProcessedCurrencyEnum = "WST"

	// InvoicePaymentTransactionProcessedCurrencyXAF captures enum value "XAF"
	InvoicePaymentTransactionProcessedCurrencyXAF InvoicePaymentTransactionProcessedCurrencyEnum = "XAF"

	// InvoicePaymentTransactionProcessedCurrencyXCD captures enum value "XCD"
	InvoicePaymentTransactionProcessedCurrencyXCD InvoicePaymentTransactionProcessedCurrencyEnum = "XCD"

	// InvoicePaymentTransactionProcessedCurrencyXDR captures enum value "XDR"
	InvoicePaymentTransactionProcessedCurrencyXDR InvoicePaymentTransactionProcessedCurrencyEnum = "XDR"

	// InvoicePaymentTransactionProcessedCurrencyXOF captures enum value "XOF"
	InvoicePaymentTransactionProcessedCurrencyXOF InvoicePaymentTransactionProcessedCurrencyEnum = "XOF"

	// InvoicePaymentTransactionProcessedCurrencyXPF captures enum value "XPF"
	InvoicePaymentTransactionProcessedCurrencyXPF InvoicePaymentTransactionProcessedCurrencyEnum = "XPF"

	// InvoicePaymentTransactionProcessedCurrencyYER captures enum value "YER"
	InvoicePaymentTransactionProcessedCurrencyYER InvoicePaymentTransactionProcessedCurrencyEnum = "YER"

	// InvoicePaymentTransactionProcessedCurrencyZAR captures enum value "ZAR"
	InvoicePaymentTransactionProcessedCurrencyZAR InvoicePaymentTransactionProcessedCurrencyEnum = "ZAR"

	// InvoicePaymentTransactionProcessedCurrencyZMW captures enum value "ZMW"
	InvoicePaymentTransactionProcessedCurrencyZMW InvoicePaymentTransactionProcessedCurrencyEnum = "ZMW"

	// InvoicePaymentTransactionProcessedCurrencyZWD captures enum value "ZWD"
	InvoicePaymentTransactionProcessedCurrencyZWD InvoicePaymentTransactionProcessedCurrencyEnum = "ZWD"

	// InvoicePaymentTransactionProcessedCurrencyBTC captures enum value "BTC"
	InvoicePaymentTransactionProcessedCurrencyBTC InvoicePaymentTransactionProcessedCurrencyEnum = "BTC"
)

var InvoicePaymentTransactionProcessedCurrencyEnumValues = []string{
	"AED",
	"AFN",
	"ALL",
	"AMD",
	"ANG",
	"AOA",
	"ARS",
	"AUD",
	"AWG",
	"AZN",
	"BAM",
	"BBD",
	"BDT",
	"BGN",
	"BHD",
	"BIF",
	"BMD",
	"BND",
	"BOB",
	"BRL",
	"BSD",
	"BTN",
	"BWP",
	"BYR",
	"BZD",
	"CAD",
	"CDF",
	"CHF",
	"CLP",
	"CNY",
	"COP",
	"CRC",
	"CUC",
	"CUP",
	"CVE",
	"CZK",
	"DJF",
	"DKK",
	"DOP",
	"DZD",
	"EGP",
	"ERN",
	"ETB",
	"EUR",
	"FJD",
	"FKP",
	"GBP",
	"GEL",
	"GGP",
	"GHS",
	"GIP",
	"GMD",
	"GNF",
	"GTQ",
	"GYD",
	"HKD",
	"HNL",
	"HRK",
	"HTG",
	"HUF",
	"IDR",
	"ILS",
	"IMP",
	"INR",
	"IQD",
	"IRR",
	"ISK",
	"JEP",
	"JMD",
	"JOD",
	"JPY",
	"KES",
	"KGS",
	"KHR",
	"KMF",
	"KPW",
	"KRW",
	"KWD",
	"KYD",
	"KZT",
	"LAK",
	"LBP",
	"LKR",
	"LRD",
	"LSL",
	"LTL",
	"LVL",
	"LYD",
	"MAD",
	"MDL",
	"MGA",
	"MKD",
	"MMK",
	"MNT",
	"MOP",
	"MRO",
	"MUR",
	"MVR",
	"MWK",
	"MXN",
	"MYR",
	"MZN",
	"NAD",
	"NGN",
	"NIO",
	"NOK",
	"NPR",
	"NZD",
	"OMR",
	"PAB",
	"PEN",
	"PGK",
	"PHP",
	"PKR",
	"PLN",
	"PYG",
	"QAR",
	"RON",
	"RSD",
	"RUB",
	"RWF",
	"SAR",
	"SBD",
	"SCR",
	"SDG",
	"SEK",
	"SGD",
	"SHP",
	"SLL",
	"SOS",
	"SPL",
	"SRD",
	"STD",
	"SVC",
	"SYP",
	"SZL",
	"THB",
	"TJS",
	"TMT",
	"TND",
	"TOP",
	"TRY",
	"TTD",
	"TVD",
	"TWD",
	"TZS",
	"UAH",
	"UGX",
	"USD",
	"UYU",
	"UZS",
	"VEF",
	"VND",
	"VUV",
	"WST",
	"XAF",
	"XCD",
	"XDR",
	"XOF",
	"XPF",
	"YER",
	"ZAR",
	"ZMW",
	"ZWD",
	"BTC",
}

func (e InvoicePaymentTransactionProcessedCurrencyEnum) IsValid() bool {
	for _, v := range InvoicePaymentTransactionProcessedCurrencyEnumValues {
		if v == string(e) {
			return true
		}
	}
	return false
}

// prop value enum
func (m *InvoicePaymentTransaction) validateProcessedCurrencyEnum(path, location string, value InvoicePaymentTransactionProcessedCurrencyEnum) error {
	if err := validate.Enum(path, location, value, invoicePaymentTransactionTypeProcessedCurrencyPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoicePaymentTransaction) validateProcessedCurrency(formats strfmt.Registry) error {

	if swag.IsZero(m.ProcessedCurrency) { // not required
		return nil
	}

	// value enum
	if err := m.validateProcessedCurrencyEnum("processedCurrency", "body", m.ProcessedCurrency); err != nil {
		return err
	}

	return nil
}

func (m *InvoicePaymentTransaction) validateProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.Properties) { // not required
		return nil
	}

	for i := 0; i < len(m.Properties); i++ {
		if swag.IsZero(m.Properties[i]) { // not required
			continue
		}

		if m.Properties[i] != nil {
			if err := m.Properties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("properties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var invoicePaymentTransactionTypeStatusPropEnum []interface{}

func init() {
	var res []InvoicePaymentTransactionStatusEnum
	if err := json.Unmarshal([]byte(`["SUCCESS","UNKNOWN","PENDING","PAYMENT_FAILURE","PLUGIN_FAILURE","PAYMENT_SYSTEM_OFF"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoicePaymentTransactionTypeStatusPropEnum = append(invoicePaymentTransactionTypeStatusPropEnum, v)
	}
}

type InvoicePaymentTransactionStatusEnum string

const (

	// InvoicePaymentTransactionStatusSUCCESS captures enum value "SUCCESS"
	InvoicePaymentTransactionStatusSUCCESS InvoicePaymentTransactionStatusEnum = "SUCCESS"

	// InvoicePaymentTransactionStatusUNKNOWN captures enum value "UNKNOWN"
	InvoicePaymentTransactionStatusUNKNOWN InvoicePaymentTransactionStatusEnum = "UNKNOWN"

	// InvoicePaymentTransactionStatusPENDING captures enum value "PENDING"
	InvoicePaymentTransactionStatusPENDING InvoicePaymentTransactionStatusEnum = "PENDING"

	// InvoicePaymentTransactionStatusPAYMENTFAILURE captures enum value "PAYMENT_FAILURE"
	InvoicePaymentTransactionStatusPAYMENTFAILURE InvoicePaymentTransactionStatusEnum = "PAYMENT_FAILURE"

	// InvoicePaymentTransactionStatusPLUGINFAILURE captures enum value "PLUGIN_FAILURE"
	InvoicePaymentTransactionStatusPLUGINFAILURE InvoicePaymentTransactionStatusEnum = "PLUGIN_FAILURE"

	// InvoicePaymentTransactionStatusPAYMENTSYSTEMOFF captures enum value "PAYMENT_SYSTEM_OFF"
	InvoicePaymentTransactionStatusPAYMENTSYSTEMOFF InvoicePaymentTransactionStatusEnum = "PAYMENT_SYSTEM_OFF"
)

var InvoicePaymentTransactionStatusEnumValues = []string{
	"SUCCESS",
	"UNKNOWN",
	"PENDING",
	"PAYMENT_FAILURE",
	"PLUGIN_FAILURE",
	"PAYMENT_SYSTEM_OFF",
}

func (e InvoicePaymentTransactionStatusEnum) IsValid() bool {
	for _, v := range InvoicePaymentTransactionStatusEnumValues {
		if v == string(e) {
			return true
		}
	}
	return false
}

// prop value enum
func (m *InvoicePaymentTransaction) validateStatusEnum(path, location string, value InvoicePaymentTransactionStatusEnum) error {
	if err := validate.Enum(path, location, value, invoicePaymentTransactionTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoicePaymentTransaction) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	// value enum
	if err := m.validateStatusEnum("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *InvoicePaymentTransaction) validateTransactionID(formats strfmt.Registry) error {

	if swag.IsZero(m.TransactionID) { // not required
		return nil
	}

	if err := validate.FormatOf("transactionId", "body", "uuid", m.TransactionID.String(), formats); err != nil {
		return err
	}

	return nil
}

var invoicePaymentTransactionTypeTransactionTypePropEnum []interface{}

func init() {
	var res []InvoicePaymentTransactionTransactionTypeEnum
	if err := json.Unmarshal([]byte(`["AUTHORIZE","CAPTURE","CHARGEBACK","CREDIT","PURCHASE","REFUND","VOID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		invoicePaymentTransactionTypeTransactionTypePropEnum = append(invoicePaymentTransactionTypeTransactionTypePropEnum, v)
	}
}

type InvoicePaymentTransactionTransactionTypeEnum string

const (

	// InvoicePaymentTransactionTransactionTypeAUTHORIZE captures enum value "AUTHORIZE"
	InvoicePaymentTransactionTransactionTypeAUTHORIZE InvoicePaymentTransactionTransactionTypeEnum = "AUTHORIZE"

	// InvoicePaymentTransactionTransactionTypeCAPTURE captures enum value "CAPTURE"
	InvoicePaymentTransactionTransactionTypeCAPTURE InvoicePaymentTransactionTransactionTypeEnum = "CAPTURE"

	// InvoicePaymentTransactionTransactionTypeCHARGEBACK captures enum value "CHARGEBACK"
	InvoicePaymentTransactionTransactionTypeCHARGEBACK InvoicePaymentTransactionTransactionTypeEnum = "CHARGEBACK"

	// InvoicePaymentTransactionTransactionTypeCREDIT captures enum value "CREDIT"
	InvoicePaymentTransactionTransactionTypeCREDIT InvoicePaymentTransactionTransactionTypeEnum = "CREDIT"

	// InvoicePaymentTransactionTransactionTypePURCHASE captures enum value "PURCHASE"
	InvoicePaymentTransactionTransactionTypePURCHASE InvoicePaymentTransactionTransactionTypeEnum = "PURCHASE"

	// InvoicePaymentTransactionTransactionTypeREFUND captures enum value "REFUND"
	InvoicePaymentTransactionTransactionTypeREFUND InvoicePaymentTransactionTransactionTypeEnum = "REFUND"

	// InvoicePaymentTransactionTransactionTypeVOID captures enum value "VOID"
	InvoicePaymentTransactionTransactionTypeVOID InvoicePaymentTransactionTransactionTypeEnum = "VOID"
)

var InvoicePaymentTransactionTransactionTypeEnumValues = []string{
	"AUTHORIZE",
	"CAPTURE",
	"CHARGEBACK",
	"CREDIT",
	"PURCHASE",
	"REFUND",
	"VOID",
}

func (e InvoicePaymentTransactionTransactionTypeEnum) IsValid() bool {
	for _, v := range InvoicePaymentTransactionTransactionTypeEnumValues {
		if v == string(e) {
			return true
		}
	}
	return false
}

// prop value enum
func (m *InvoicePaymentTransaction) validateTransactionTypeEnum(path, location string, value InvoicePaymentTransactionTransactionTypeEnum) error {
	if err := validate.Enum(path, location, value, invoicePaymentTransactionTypeTransactionTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *InvoicePaymentTransaction) validateTransactionType(formats strfmt.Registry) error {

	if swag.IsZero(m.TransactionType) { // not required
		return nil
	}

	// value enum
	if err := m.validateTransactionTypeEnum("transactionType", "body", m.TransactionType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InvoicePaymentTransaction) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InvoicePaymentTransaction) UnmarshalBinary(b []byte) error {
	var res InvoicePaymentTransaction
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

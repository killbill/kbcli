// Code generated by go-swagger; DO NOT EDIT.

package kbmodel

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Duration duration
// swagger:model Duration
type Duration struct {

	// number
	Number int32 `json:"number,omitempty"`

	// unit
	// Enum: [DAYS WEEKS MONTHS YEARS UNLIMITED]
	Unit DurationUnitEnum `json:"unit,omitempty"`
}

// Validate validates this duration
func (m *Duration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var durationTypeUnitPropEnum []interface{}

func init() {
	var res []DurationUnitEnum
	if err := json.Unmarshal([]byte(`["DAYS","WEEKS","MONTHS","YEARS","UNLIMITED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		durationTypeUnitPropEnum = append(durationTypeUnitPropEnum, v)
	}
}

type DurationUnitEnum string

const (

	// DurationUnitDAYS captures enum value "DAYS"
	DurationUnitDAYS DurationUnitEnum = "DAYS"

	// DurationUnitWEEKS captures enum value "WEEKS"
	DurationUnitWEEKS DurationUnitEnum = "WEEKS"

	// DurationUnitMONTHS captures enum value "MONTHS"
	DurationUnitMONTHS DurationUnitEnum = "MONTHS"

	// DurationUnitYEARS captures enum value "YEARS"
	DurationUnitYEARS DurationUnitEnum = "YEARS"

	// DurationUnitUNLIMITED captures enum value "UNLIMITED"
	DurationUnitUNLIMITED DurationUnitEnum = "UNLIMITED"
)

var DurationUnitEnumValues = []string{
	"DAYS",
	"WEEKS",
	"MONTHS",
	"YEARS",
	"UNLIMITED",
}

func (e DurationUnitEnum) IsValid() bool {
	for _, v := range DurationUnitEnumValues {
		if v == string(e) {
			return true
		}
	}
	return false
}

// prop value enum
func (m *Duration) validateUnitEnum(path, location string, value DurationUnitEnum) error {
	if err := validate.Enum(path, location, value, durationTypeUnitPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Duration) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(m.Unit) { // not required
		return nil
	}

	// value enum
	if err := m.validateUnitEnum("unit", "body", m.Unit); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Duration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Duration) UnmarshalBinary(b []byte) error {
	var res Duration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

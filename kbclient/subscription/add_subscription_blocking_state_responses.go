// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/killbill/kbcli/v2/kbcommon"

	strfmt "github.com/go-openapi/strfmt"

	kbmodel "github.com/killbill/kbcli/v2/kbmodel"
)

// AddSubscriptionBlockingStateReader is a Reader for the AddSubscriptionBlockingState structure.
type AddSubscriptionBlockingStateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSubscriptionBlockingStateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201, 200:
		result := NewAddSubscriptionBlockingStateCreated()
		result.HttpResponse = response
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		errorResult := kbcommon.NewKillbillError(response.Code())
		if err := consumer.Consume(response.Body(), &errorResult); err != nil && err != io.EOF {
			return nil, err
		}
		return nil, errorResult
	}
}

// NewAddSubscriptionBlockingStateCreated creates a AddSubscriptionBlockingStateCreated with default headers values
func NewAddSubscriptionBlockingStateCreated() *AddSubscriptionBlockingStateCreated {
	return &AddSubscriptionBlockingStateCreated{}
}

/*AddSubscriptionBlockingStateCreated handles this case with default header values.

Blocking state created successfully
*/
type AddSubscriptionBlockingStateCreated struct {
	Payload []*kbmodel.BlockingState

	HttpResponse runtime.ClientResponse
}

func (o *AddSubscriptionBlockingStateCreated) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/subscriptions/{subscriptionId}/block][%d] addSubscriptionBlockingStateCreated  %+v", 201, o.Payload)
}

func (o *AddSubscriptionBlockingStateCreated) GetPayload() []*kbmodel.BlockingState {
	return o.Payload
}

func (o *AddSubscriptionBlockingStateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSubscriptionBlockingStateBadRequest creates a AddSubscriptionBlockingStateBadRequest with default headers values
func NewAddSubscriptionBlockingStateBadRequest() *AddSubscriptionBlockingStateBadRequest {
	return &AddSubscriptionBlockingStateBadRequest{}
}

/*AddSubscriptionBlockingStateBadRequest handles this case with default header values.

Invalid subscription id supplied
*/
type AddSubscriptionBlockingStateBadRequest struct {
	HttpResponse runtime.ClientResponse
}

func (o *AddSubscriptionBlockingStateBadRequest) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/subscriptions/{subscriptionId}/block][%d] addSubscriptionBlockingStateBadRequest ", 400)
}

func (o *AddSubscriptionBlockingStateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSubscriptionBlockingStateNotFound creates a AddSubscriptionBlockingStateNotFound with default headers values
func NewAddSubscriptionBlockingStateNotFound() *AddSubscriptionBlockingStateNotFound {
	return &AddSubscriptionBlockingStateNotFound{}
}

/*AddSubscriptionBlockingStateNotFound handles this case with default header values.

Subscription not found
*/
type AddSubscriptionBlockingStateNotFound struct {
	HttpResponse runtime.ClientResponse
}

func (o *AddSubscriptionBlockingStateNotFound) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/subscriptions/{subscriptionId}/block][%d] addSubscriptionBlockingStateNotFound ", 404)
}

func (o *AddSubscriptionBlockingStateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

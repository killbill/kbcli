// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSubscriptionTagsParams creates a new DeleteSubscriptionTagsParams object
// with the default values initialized.
func NewDeleteSubscriptionTagsParams() *DeleteSubscriptionTagsParams {
	var ()
	return &DeleteSubscriptionTagsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSubscriptionTagsParamsWithTimeout creates a new DeleteSubscriptionTagsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSubscriptionTagsParamsWithTimeout(timeout time.Duration) *DeleteSubscriptionTagsParams {
	var ()
	return &DeleteSubscriptionTagsParams{

		timeout: timeout,
	}
}

// NewDeleteSubscriptionTagsParamsWithContext creates a new DeleteSubscriptionTagsParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSubscriptionTagsParamsWithContext(ctx context.Context) *DeleteSubscriptionTagsParams {
	var ()
	return &DeleteSubscriptionTagsParams{

		Context: ctx,
	}
}

// NewDeleteSubscriptionTagsParamsWithHTTPClient creates a new DeleteSubscriptionTagsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSubscriptionTagsParamsWithHTTPClient(client *http.Client) *DeleteSubscriptionTagsParams {
	var ()
	return &DeleteSubscriptionTagsParams{
		HTTPClient: client,
	}
}

/*DeleteSubscriptionTagsParams contains all the parameters to send to the API endpoint
for the delete subscription tags operation typically these are written to a http.Request
*/
type DeleteSubscriptionTagsParams struct {

	/*XKillbillComment*/
	XKillbillComment *string
	/*XKillbillCreatedBy*/
	XKillbillCreatedBy string
	/*XKillbillReason*/
	XKillbillReason *string
	/*SubscriptionID*/
	SubscriptionID strfmt.UUID
	/*TagDef*/
	TagDef []strfmt.UUID

	WithProfilingInfo     *string // If set, return KB hprof headers
	WithStackTrace        *bool   // If set, returns full stack trace with error message
	timeout               time.Duration
	Context               context.Context
	HTTPClient            *http.Client
	ProcessLocationHeader bool // For create APIs that return 201, send another request and retrieve the resource.
}

// WithTimeout adds the timeout to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithTimeout(timeout time.Duration) *DeleteSubscriptionTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithContext(ctx context.Context) *DeleteSubscriptionTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithHTTPClient(client *http.Client) *DeleteSubscriptionTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXKillbillComment adds the xKillbillComment to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithXKillbillComment(xKillbillComment *string) *DeleteSubscriptionTagsParams {
	o.SetXKillbillComment(xKillbillComment)
	return o
}

// SetXKillbillComment adds the xKillbillComment to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetXKillbillComment(xKillbillComment *string) {
	o.XKillbillComment = xKillbillComment
}

// WithXKillbillCreatedBy adds the xKillbillCreatedBy to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithXKillbillCreatedBy(xKillbillCreatedBy string) *DeleteSubscriptionTagsParams {
	o.SetXKillbillCreatedBy(xKillbillCreatedBy)
	return o
}

// SetXKillbillCreatedBy adds the xKillbillCreatedBy to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetXKillbillCreatedBy(xKillbillCreatedBy string) {
	o.XKillbillCreatedBy = xKillbillCreatedBy
}

// WithXKillbillReason adds the xKillbillReason to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithXKillbillReason(xKillbillReason *string) *DeleteSubscriptionTagsParams {
	o.SetXKillbillReason(xKillbillReason)
	return o
}

// SetXKillbillReason adds the xKillbillReason to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetXKillbillReason(xKillbillReason *string) {
	o.XKillbillReason = xKillbillReason
}

// WithSubscriptionID adds the subscriptionID to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithSubscriptionID(subscriptionID strfmt.UUID) *DeleteSubscriptionTagsParams {
	o.SetSubscriptionID(subscriptionID)
	return o
}

// SetSubscriptionID adds the subscriptionId to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetSubscriptionID(subscriptionID strfmt.UUID) {
	o.SubscriptionID = subscriptionID
}

// WithTagDef adds the tagDef to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) WithTagDef(tagDef []strfmt.UUID) *DeleteSubscriptionTagsParams {
	o.SetTagDef(tagDef)
	return o
}

// SetTagDef adds the tagDef to the delete subscription tags params
func (o *DeleteSubscriptionTagsParams) SetTagDef(tagDef []strfmt.UUID) {
	o.TagDef = tagDef
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSubscriptionTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XKillbillComment != nil {

		// header param X-Killbill-Comment
		if err := r.SetHeaderParam("X-Killbill-Comment", *o.XKillbillComment); err != nil {
			return err
		}

	}

	// header param X-Killbill-CreatedBy
	if err := r.SetHeaderParam("X-Killbill-CreatedBy", o.XKillbillCreatedBy); err != nil {
		return err
	}

	if o.XKillbillReason != nil {

		// header param X-Killbill-Reason
		if err := r.SetHeaderParam("X-Killbill-Reason", *o.XKillbillReason); err != nil {
			return err
		}

	}

	// path param subscriptionId
	if err := r.SetPathParam("subscriptionId", o.SubscriptionID.String()); err != nil {
		return err
	}

	var valuesTagDef []string
	for _, v := range o.TagDef {
		valuesTagDef = append(valuesTagDef, v.String())
	}

	joinedTagDef := swag.JoinByFormat(valuesTagDef, "multi")
	// query array param tagDef
	if err := r.SetQueryParam("tagDef", joinedTagDef...); err != nil {
		return err
	}

	// header param WithProfilingInfo
	if o.WithProfilingInfo != nil && len(*o.WithProfilingInfo) > 0 {
		if err := r.SetHeaderParam("X-Killbill-Profiling-Req", *o.WithProfilingInfo); err != nil {
			return err
		}
	}

	// header param withStackTrace
	if o.WithStackTrace != nil && *o.WithStackTrace {
		if err := r.SetQueryParam("withStackTrace", "true"); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

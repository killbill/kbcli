// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/killbill/kbcli/v3/kbcommon"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateSubscriptionTagsReader is a Reader for the CreateSubscriptionTags structure.
type CreateSubscriptionTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSubscriptionTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201, 200:
		result := NewCreateSubscriptionTagsCreated()
		result.HttpResponse = response
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		errorResult := kbcommon.NewKillbillError(response.Code())
		if err := consumer.Consume(response.Body(), &errorResult); err != nil && err != io.EOF {
			return nil, err
		}
		return nil, errorResult
	}
}

// NewCreateSubscriptionTagsCreated creates a CreateSubscriptionTagsCreated with default headers values
func NewCreateSubscriptionTagsCreated() *CreateSubscriptionTagsCreated {
	return &CreateSubscriptionTagsCreated{}
}

/*CreateSubscriptionTagsCreated handles this case with default header values.

Tag created successfully
*/
type CreateSubscriptionTagsCreated struct {
	HttpResponse runtime.ClientResponse
}

func (o *CreateSubscriptionTagsCreated) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/subscriptions/{subscriptionId}/tags][%d] createSubscriptionTagsCreated ", 201)
}

func (o *CreateSubscriptionTagsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubscriptionTagsBadRequest creates a CreateSubscriptionTagsBadRequest with default headers values
func NewCreateSubscriptionTagsBadRequest() *CreateSubscriptionTagsBadRequest {
	return &CreateSubscriptionTagsBadRequest{}
}

/*CreateSubscriptionTagsBadRequest handles this case with default header values.

Invalid subscription id supplied
*/
type CreateSubscriptionTagsBadRequest struct {
	HttpResponse runtime.ClientResponse
}

func (o *CreateSubscriptionTagsBadRequest) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/subscriptions/{subscriptionId}/tags][%d] createSubscriptionTagsBadRequest ", 400)
}

func (o *CreateSubscriptionTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

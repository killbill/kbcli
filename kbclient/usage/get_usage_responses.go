// Code generated by go-swagger; DO NOT EDIT.

package usage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// GetUsageReader is a Reader for the GetUsage structure.
type GetUsageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUsageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUsageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUsageOK creates a GetUsageOK with default headers values
func NewGetUsageOK() *GetUsageOK {
	return &GetUsageOK{}
}

/*
GetUsageOK describes a response with status code 200, with default header values.

successful operation
*/
type GetUsageOK struct {
	Payload *kbmodel.RolledUpUsage
}

// IsSuccess returns true when this get usage o k response has a 2xx status code
func (o *GetUsageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get usage o k response has a 3xx status code
func (o *GetUsageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get usage o k response has a 4xx status code
func (o *GetUsageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get usage o k response has a 5xx status code
func (o *GetUsageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get usage o k response a status code equal to that given
func (o *GetUsageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get usage o k response
func (o *GetUsageOK) Code() int {
	return 200
}

func (o *GetUsageOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/usages/{subscriptionId}/{unitType}][%d] getUsageOK  %+v", 200, o.Payload)
}

func (o *GetUsageOK) String() string {
	return fmt.Sprintf("[GET /1.0/kb/usages/{subscriptionId}/{unitType}][%d] getUsageOK  %+v", 200, o.Payload)
}

func (o *GetUsageOK) GetPayload() *kbmodel.RolledUpUsage {
	return o.Payload
}

func (o *GetUsageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kbmodel.RolledUpUsage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUsageBadRequest creates a GetUsageBadRequest with default headers values
func NewGetUsageBadRequest() *GetUsageBadRequest {
	return &GetUsageBadRequest{}
}

/*
GetUsageBadRequest describes a response with status code 400, with default header values.

Missing start date or end date
*/
type GetUsageBadRequest struct {
}

// IsSuccess returns true when this get usage bad request response has a 2xx status code
func (o *GetUsageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get usage bad request response has a 3xx status code
func (o *GetUsageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get usage bad request response has a 4xx status code
func (o *GetUsageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get usage bad request response has a 5xx status code
func (o *GetUsageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get usage bad request response a status code equal to that given
func (o *GetUsageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get usage bad request response
func (o *GetUsageBadRequest) Code() int {
	return 400
}

func (o *GetUsageBadRequest) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/usages/{subscriptionId}/{unitType}][%d] getUsageBadRequest ", 400)
}

func (o *GetUsageBadRequest) String() string {
	return fmt.Sprintf("[GET /1.0/kb/usages/{subscriptionId}/{unitType}][%d] getUsageBadRequest ", 400)
}

func (o *GetUsageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

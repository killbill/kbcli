// Code generated by go-swagger; DO NOT EDIT.

package invoice_payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetInvoicePaymentAuditLogsWithHistoryParams creates a new GetInvoicePaymentAuditLogsWithHistoryParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInvoicePaymentAuditLogsWithHistoryParams() *GetInvoicePaymentAuditLogsWithHistoryParams {
	return &GetInvoicePaymentAuditLogsWithHistoryParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInvoicePaymentAuditLogsWithHistoryParamsWithTimeout creates a new GetInvoicePaymentAuditLogsWithHistoryParams object
// with the ability to set a timeout on a request.
func NewGetInvoicePaymentAuditLogsWithHistoryParamsWithTimeout(timeout time.Duration) *GetInvoicePaymentAuditLogsWithHistoryParams {
	return &GetInvoicePaymentAuditLogsWithHistoryParams{
		timeout: timeout,
	}
}

// NewGetInvoicePaymentAuditLogsWithHistoryParamsWithContext creates a new GetInvoicePaymentAuditLogsWithHistoryParams object
// with the ability to set a context for a request.
func NewGetInvoicePaymentAuditLogsWithHistoryParamsWithContext(ctx context.Context) *GetInvoicePaymentAuditLogsWithHistoryParams {
	return &GetInvoicePaymentAuditLogsWithHistoryParams{
		Context: ctx,
	}
}

// NewGetInvoicePaymentAuditLogsWithHistoryParamsWithHTTPClient creates a new GetInvoicePaymentAuditLogsWithHistoryParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInvoicePaymentAuditLogsWithHistoryParamsWithHTTPClient(client *http.Client) *GetInvoicePaymentAuditLogsWithHistoryParams {
	return &GetInvoicePaymentAuditLogsWithHistoryParams{
		HTTPClient: client,
	}
}

/*
GetInvoicePaymentAuditLogsWithHistoryParams contains all the parameters to send to the API endpoint

	for the get invoice payment audit logs with history operation.

	Typically these are written to a http.Request.
*/
type GetInvoicePaymentAuditLogsWithHistoryParams struct {

	// InvoicePaymentID.
	//
	// Format: uuid
	InvoicePaymentID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get invoice payment audit logs with history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) WithDefaults() *GetInvoicePaymentAuditLogsWithHistoryParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get invoice payment audit logs with history params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) WithTimeout(timeout time.Duration) *GetInvoicePaymentAuditLogsWithHistoryParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) WithContext(ctx context.Context) *GetInvoicePaymentAuditLogsWithHistoryParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) WithHTTPClient(client *http.Client) *GetInvoicePaymentAuditLogsWithHistoryParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInvoicePaymentID adds the invoicePaymentID to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) WithInvoicePaymentID(invoicePaymentID strfmt.UUID) *GetInvoicePaymentAuditLogsWithHistoryParams {
	o.SetInvoicePaymentID(invoicePaymentID)
	return o
}

// SetInvoicePaymentID adds the invoicePaymentId to the get invoice payment audit logs with history params
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) SetInvoicePaymentID(invoicePaymentID strfmt.UUID) {
	o.InvoicePaymentID = invoicePaymentID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInvoicePaymentAuditLogsWithHistoryParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param invoicePaymentId
	if err := r.SetPathParam("invoicePaymentId", o.InvoicePaymentID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// GetPaymentAuditLogsWithHistoryReader is a Reader for the GetPaymentAuditLogsWithHistory structure.
type GetPaymentAuditLogsWithHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPaymentAuditLogsWithHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPaymentAuditLogsWithHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetPaymentAuditLogsWithHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPaymentAuditLogsWithHistoryOK creates a GetPaymentAuditLogsWithHistoryOK with default headers values
func NewGetPaymentAuditLogsWithHistoryOK() *GetPaymentAuditLogsWithHistoryOK {
	return &GetPaymentAuditLogsWithHistoryOK{}
}

/*
GetPaymentAuditLogsWithHistoryOK describes a response with status code 200, with default header values.

successful operation
*/
type GetPaymentAuditLogsWithHistoryOK struct {
	Payload []*kbmodel.AuditLog
}

// IsSuccess returns true when this get payment audit logs with history o k response has a 2xx status code
func (o *GetPaymentAuditLogsWithHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get payment audit logs with history o k response has a 3xx status code
func (o *GetPaymentAuditLogsWithHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get payment audit logs with history o k response has a 4xx status code
func (o *GetPaymentAuditLogsWithHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get payment audit logs with history o k response has a 5xx status code
func (o *GetPaymentAuditLogsWithHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get payment audit logs with history o k response a status code equal to that given
func (o *GetPaymentAuditLogsWithHistoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get payment audit logs with history o k response
func (o *GetPaymentAuditLogsWithHistoryOK) Code() int {
	return 200
}

func (o *GetPaymentAuditLogsWithHistoryOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/payments/{paymentId}/auditLogsWithHistory][%d] getPaymentAuditLogsWithHistoryOK  %+v", 200, o.Payload)
}

func (o *GetPaymentAuditLogsWithHistoryOK) String() string {
	return fmt.Sprintf("[GET /1.0/kb/payments/{paymentId}/auditLogsWithHistory][%d] getPaymentAuditLogsWithHistoryOK  %+v", 200, o.Payload)
}

func (o *GetPaymentAuditLogsWithHistoryOK) GetPayload() []*kbmodel.AuditLog {
	return o.Payload
}

func (o *GetPaymentAuditLogsWithHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPaymentAuditLogsWithHistoryNotFound creates a GetPaymentAuditLogsWithHistoryNotFound with default headers values
func NewGetPaymentAuditLogsWithHistoryNotFound() *GetPaymentAuditLogsWithHistoryNotFound {
	return &GetPaymentAuditLogsWithHistoryNotFound{}
}

/*
GetPaymentAuditLogsWithHistoryNotFound describes a response with status code 404, with default header values.

Account not found
*/
type GetPaymentAuditLogsWithHistoryNotFound struct {
}

// IsSuccess returns true when this get payment audit logs with history not found response has a 2xx status code
func (o *GetPaymentAuditLogsWithHistoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get payment audit logs with history not found response has a 3xx status code
func (o *GetPaymentAuditLogsWithHistoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get payment audit logs with history not found response has a 4xx status code
func (o *GetPaymentAuditLogsWithHistoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get payment audit logs with history not found response has a 5xx status code
func (o *GetPaymentAuditLogsWithHistoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get payment audit logs with history not found response a status code equal to that given
func (o *GetPaymentAuditLogsWithHistoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get payment audit logs with history not found response
func (o *GetPaymentAuditLogsWithHistoryNotFound) Code() int {
	return 404
}

func (o *GetPaymentAuditLogsWithHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/payments/{paymentId}/auditLogsWithHistory][%d] getPaymentAuditLogsWithHistoryNotFound ", 404)
}

func (o *GetPaymentAuditLogsWithHistoryNotFound) String() string {
	return fmt.Sprintf("[GET /1.0/kb/payments/{paymentId}/auditLogsWithHistory][%d] getPaymentAuditLogsWithHistoryNotFound ", 404)
}

func (o *GetPaymentAuditLogsWithHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

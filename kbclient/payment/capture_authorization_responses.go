// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// CaptureAuthorizationReader is a Reader for the CaptureAuthorization structure.
type CaptureAuthorizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CaptureAuthorizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewCaptureAuthorizationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCaptureAuthorizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewCaptureAuthorizationPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCaptureAuthorizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCaptureAuthorizationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewCaptureAuthorizationBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewCaptureAuthorizationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCaptureAuthorizationGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCaptureAuthorizationCreated creates a CaptureAuthorizationCreated with default headers values
func NewCaptureAuthorizationCreated() *CaptureAuthorizationCreated {
	return &CaptureAuthorizationCreated{}
}

/*
CaptureAuthorizationCreated describes a response with status code 201, with default header values.

Payment transaction created successfully
*/
type CaptureAuthorizationCreated struct {
	Payload *kbmodel.Payment
}

// IsSuccess returns true when this capture authorization created response has a 2xx status code
func (o *CaptureAuthorizationCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this capture authorization created response has a 3xx status code
func (o *CaptureAuthorizationCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization created response has a 4xx status code
func (o *CaptureAuthorizationCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this capture authorization created response has a 5xx status code
func (o *CaptureAuthorizationCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this capture authorization created response a status code equal to that given
func (o *CaptureAuthorizationCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the capture authorization created response
func (o *CaptureAuthorizationCreated) Code() int {
	return 201
}

func (o *CaptureAuthorizationCreated) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationCreated  %+v", 201, o.Payload)
}

func (o *CaptureAuthorizationCreated) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationCreated  %+v", 201, o.Payload)
}

func (o *CaptureAuthorizationCreated) GetPayload() *kbmodel.Payment {
	return o.Payload
}

func (o *CaptureAuthorizationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kbmodel.Payment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCaptureAuthorizationBadRequest creates a CaptureAuthorizationBadRequest with default headers values
func NewCaptureAuthorizationBadRequest() *CaptureAuthorizationBadRequest {
	return &CaptureAuthorizationBadRequest{}
}

/*
CaptureAuthorizationBadRequest describes a response with status code 400, with default header values.

Invalid paymentId supplied
*/
type CaptureAuthorizationBadRequest struct {
}

// IsSuccess returns true when this capture authorization bad request response has a 2xx status code
func (o *CaptureAuthorizationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization bad request response has a 3xx status code
func (o *CaptureAuthorizationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization bad request response has a 4xx status code
func (o *CaptureAuthorizationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this capture authorization bad request response has a 5xx status code
func (o *CaptureAuthorizationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this capture authorization bad request response a status code equal to that given
func (o *CaptureAuthorizationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the capture authorization bad request response
func (o *CaptureAuthorizationBadRequest) Code() int {
	return 400
}

func (o *CaptureAuthorizationBadRequest) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationBadRequest ", 400)
}

func (o *CaptureAuthorizationBadRequest) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationBadRequest ", 400)
}

func (o *CaptureAuthorizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCaptureAuthorizationPaymentRequired creates a CaptureAuthorizationPaymentRequired with default headers values
func NewCaptureAuthorizationPaymentRequired() *CaptureAuthorizationPaymentRequired {
	return &CaptureAuthorizationPaymentRequired{}
}

/*
CaptureAuthorizationPaymentRequired describes a response with status code 402, with default header values.

Transaction declined by gateway
*/
type CaptureAuthorizationPaymentRequired struct {
}

// IsSuccess returns true when this capture authorization payment required response has a 2xx status code
func (o *CaptureAuthorizationPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization payment required response has a 3xx status code
func (o *CaptureAuthorizationPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization payment required response has a 4xx status code
func (o *CaptureAuthorizationPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this capture authorization payment required response has a 5xx status code
func (o *CaptureAuthorizationPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this capture authorization payment required response a status code equal to that given
func (o *CaptureAuthorizationPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the capture authorization payment required response
func (o *CaptureAuthorizationPaymentRequired) Code() int {
	return 402
}

func (o *CaptureAuthorizationPaymentRequired) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationPaymentRequired ", 402)
}

func (o *CaptureAuthorizationPaymentRequired) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationPaymentRequired ", 402)
}

func (o *CaptureAuthorizationPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCaptureAuthorizationNotFound creates a CaptureAuthorizationNotFound with default headers values
func NewCaptureAuthorizationNotFound() *CaptureAuthorizationNotFound {
	return &CaptureAuthorizationNotFound{}
}

/*
CaptureAuthorizationNotFound describes a response with status code 404, with default header values.

Account or payment not found
*/
type CaptureAuthorizationNotFound struct {
}

// IsSuccess returns true when this capture authorization not found response has a 2xx status code
func (o *CaptureAuthorizationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization not found response has a 3xx status code
func (o *CaptureAuthorizationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization not found response has a 4xx status code
func (o *CaptureAuthorizationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this capture authorization not found response has a 5xx status code
func (o *CaptureAuthorizationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this capture authorization not found response a status code equal to that given
func (o *CaptureAuthorizationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the capture authorization not found response
func (o *CaptureAuthorizationNotFound) Code() int {
	return 404
}

func (o *CaptureAuthorizationNotFound) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationNotFound ", 404)
}

func (o *CaptureAuthorizationNotFound) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationNotFound ", 404)
}

func (o *CaptureAuthorizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCaptureAuthorizationUnprocessableEntity creates a CaptureAuthorizationUnprocessableEntity with default headers values
func NewCaptureAuthorizationUnprocessableEntity() *CaptureAuthorizationUnprocessableEntity {
	return &CaptureAuthorizationUnprocessableEntity{}
}

/*
CaptureAuthorizationUnprocessableEntity describes a response with status code 422, with default header values.

Payment is aborted by a control plugin
*/
type CaptureAuthorizationUnprocessableEntity struct {
}

// IsSuccess returns true when this capture authorization unprocessable entity response has a 2xx status code
func (o *CaptureAuthorizationUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization unprocessable entity response has a 3xx status code
func (o *CaptureAuthorizationUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization unprocessable entity response has a 4xx status code
func (o *CaptureAuthorizationUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this capture authorization unprocessable entity response has a 5xx status code
func (o *CaptureAuthorizationUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this capture authorization unprocessable entity response a status code equal to that given
func (o *CaptureAuthorizationUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the capture authorization unprocessable entity response
func (o *CaptureAuthorizationUnprocessableEntity) Code() int {
	return 422
}

func (o *CaptureAuthorizationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationUnprocessableEntity ", 422)
}

func (o *CaptureAuthorizationUnprocessableEntity) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationUnprocessableEntity ", 422)
}

func (o *CaptureAuthorizationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCaptureAuthorizationBadGateway creates a CaptureAuthorizationBadGateway with default headers values
func NewCaptureAuthorizationBadGateway() *CaptureAuthorizationBadGateway {
	return &CaptureAuthorizationBadGateway{}
}

/*
CaptureAuthorizationBadGateway describes a response with status code 502, with default header values.

Failed to submit payment transaction
*/
type CaptureAuthorizationBadGateway struct {
}

// IsSuccess returns true when this capture authorization bad gateway response has a 2xx status code
func (o *CaptureAuthorizationBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization bad gateway response has a 3xx status code
func (o *CaptureAuthorizationBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization bad gateway response has a 4xx status code
func (o *CaptureAuthorizationBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this capture authorization bad gateway response has a 5xx status code
func (o *CaptureAuthorizationBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this capture authorization bad gateway response a status code equal to that given
func (o *CaptureAuthorizationBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the capture authorization bad gateway response
func (o *CaptureAuthorizationBadGateway) Code() int {
	return 502
}

func (o *CaptureAuthorizationBadGateway) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationBadGateway ", 502)
}

func (o *CaptureAuthorizationBadGateway) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationBadGateway ", 502)
}

func (o *CaptureAuthorizationBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCaptureAuthorizationServiceUnavailable creates a CaptureAuthorizationServiceUnavailable with default headers values
func NewCaptureAuthorizationServiceUnavailable() *CaptureAuthorizationServiceUnavailable {
	return &CaptureAuthorizationServiceUnavailable{}
}

/*
CaptureAuthorizationServiceUnavailable describes a response with status code 503, with default header values.

Payment in unknown status, failed to receive gateway response
*/
type CaptureAuthorizationServiceUnavailable struct {
}

// IsSuccess returns true when this capture authorization service unavailable response has a 2xx status code
func (o *CaptureAuthorizationServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization service unavailable response has a 3xx status code
func (o *CaptureAuthorizationServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization service unavailable response has a 4xx status code
func (o *CaptureAuthorizationServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this capture authorization service unavailable response has a 5xx status code
func (o *CaptureAuthorizationServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this capture authorization service unavailable response a status code equal to that given
func (o *CaptureAuthorizationServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the capture authorization service unavailable response
func (o *CaptureAuthorizationServiceUnavailable) Code() int {
	return 503
}

func (o *CaptureAuthorizationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationServiceUnavailable ", 503)
}

func (o *CaptureAuthorizationServiceUnavailable) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationServiceUnavailable ", 503)
}

func (o *CaptureAuthorizationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCaptureAuthorizationGatewayTimeout creates a CaptureAuthorizationGatewayTimeout with default headers values
func NewCaptureAuthorizationGatewayTimeout() *CaptureAuthorizationGatewayTimeout {
	return &CaptureAuthorizationGatewayTimeout{}
}

/*
CaptureAuthorizationGatewayTimeout describes a response with status code 504, with default header values.

Payment operation timeout
*/
type CaptureAuthorizationGatewayTimeout struct {
}

// IsSuccess returns true when this capture authorization gateway timeout response has a 2xx status code
func (o *CaptureAuthorizationGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this capture authorization gateway timeout response has a 3xx status code
func (o *CaptureAuthorizationGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this capture authorization gateway timeout response has a 4xx status code
func (o *CaptureAuthorizationGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this capture authorization gateway timeout response has a 5xx status code
func (o *CaptureAuthorizationGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this capture authorization gateway timeout response a status code equal to that given
func (o *CaptureAuthorizationGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the capture authorization gateway timeout response
func (o *CaptureAuthorizationGatewayTimeout) Code() int {
	return 504
}

func (o *CaptureAuthorizationGatewayTimeout) Error() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationGatewayTimeout ", 504)
}

func (o *CaptureAuthorizationGatewayTimeout) String() string {
	return fmt.Sprintf("[POST /1.0/kb/payments/{paymentId}][%d] captureAuthorizationGatewayTimeout ", 504)
}

func (o *CaptureAuthorizationGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

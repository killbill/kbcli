// Code generated by go-swagger; DO NOT EDIT.

package payment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CompleteTransactionReader is a Reader for the CompleteTransaction structure.
type CompleteTransactionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CompleteTransactionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewCompleteTransactionNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCompleteTransactionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewCompleteTransactionPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCompleteTransactionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCompleteTransactionUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewCompleteTransactionBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewCompleteTransactionServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewCompleteTransactionGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCompleteTransactionNoContent creates a CompleteTransactionNoContent with default headers values
func NewCompleteTransactionNoContent() *CompleteTransactionNoContent {
	return &CompleteTransactionNoContent{}
}

/*
CompleteTransactionNoContent describes a response with status code 204, with default header values.

Successful operation
*/
type CompleteTransactionNoContent struct {
}

// IsSuccess returns true when this complete transaction no content response has a 2xx status code
func (o *CompleteTransactionNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this complete transaction no content response has a 3xx status code
func (o *CompleteTransactionNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction no content response has a 4xx status code
func (o *CompleteTransactionNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete transaction no content response has a 5xx status code
func (o *CompleteTransactionNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this complete transaction no content response a status code equal to that given
func (o *CompleteTransactionNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the complete transaction no content response
func (o *CompleteTransactionNoContent) Code() int {
	return 204
}

func (o *CompleteTransactionNoContent) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionNoContent ", 204)
}

func (o *CompleteTransactionNoContent) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionNoContent ", 204)
}

func (o *CompleteTransactionNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionBadRequest creates a CompleteTransactionBadRequest with default headers values
func NewCompleteTransactionBadRequest() *CompleteTransactionBadRequest {
	return &CompleteTransactionBadRequest{}
}

/*
CompleteTransactionBadRequest describes a response with status code 400, with default header values.

Invalid paymentId supplied
*/
type CompleteTransactionBadRequest struct {
}

// IsSuccess returns true when this complete transaction bad request response has a 2xx status code
func (o *CompleteTransactionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction bad request response has a 3xx status code
func (o *CompleteTransactionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction bad request response has a 4xx status code
func (o *CompleteTransactionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete transaction bad request response has a 5xx status code
func (o *CompleteTransactionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this complete transaction bad request response a status code equal to that given
func (o *CompleteTransactionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the complete transaction bad request response
func (o *CompleteTransactionBadRequest) Code() int {
	return 400
}

func (o *CompleteTransactionBadRequest) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionBadRequest ", 400)
}

func (o *CompleteTransactionBadRequest) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionBadRequest ", 400)
}

func (o *CompleteTransactionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionPaymentRequired creates a CompleteTransactionPaymentRequired with default headers values
func NewCompleteTransactionPaymentRequired() *CompleteTransactionPaymentRequired {
	return &CompleteTransactionPaymentRequired{}
}

/*
CompleteTransactionPaymentRequired describes a response with status code 402, with default header values.

Transaction declined by gateway
*/
type CompleteTransactionPaymentRequired struct {
}

// IsSuccess returns true when this complete transaction payment required response has a 2xx status code
func (o *CompleteTransactionPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction payment required response has a 3xx status code
func (o *CompleteTransactionPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction payment required response has a 4xx status code
func (o *CompleteTransactionPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete transaction payment required response has a 5xx status code
func (o *CompleteTransactionPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this complete transaction payment required response a status code equal to that given
func (o *CompleteTransactionPaymentRequired) IsCode(code int) bool {
	return code == 402
}

// Code gets the status code for the complete transaction payment required response
func (o *CompleteTransactionPaymentRequired) Code() int {
	return 402
}

func (o *CompleteTransactionPaymentRequired) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionPaymentRequired ", 402)
}

func (o *CompleteTransactionPaymentRequired) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionPaymentRequired ", 402)
}

func (o *CompleteTransactionPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionNotFound creates a CompleteTransactionNotFound with default headers values
func NewCompleteTransactionNotFound() *CompleteTransactionNotFound {
	return &CompleteTransactionNotFound{}
}

/*
CompleteTransactionNotFound describes a response with status code 404, with default header values.

Account or payment not found
*/
type CompleteTransactionNotFound struct {
}

// IsSuccess returns true when this complete transaction not found response has a 2xx status code
func (o *CompleteTransactionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction not found response has a 3xx status code
func (o *CompleteTransactionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction not found response has a 4xx status code
func (o *CompleteTransactionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete transaction not found response has a 5xx status code
func (o *CompleteTransactionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this complete transaction not found response a status code equal to that given
func (o *CompleteTransactionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the complete transaction not found response
func (o *CompleteTransactionNotFound) Code() int {
	return 404
}

func (o *CompleteTransactionNotFound) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionNotFound ", 404)
}

func (o *CompleteTransactionNotFound) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionNotFound ", 404)
}

func (o *CompleteTransactionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionUnprocessableEntity creates a CompleteTransactionUnprocessableEntity with default headers values
func NewCompleteTransactionUnprocessableEntity() *CompleteTransactionUnprocessableEntity {
	return &CompleteTransactionUnprocessableEntity{}
}

/*
CompleteTransactionUnprocessableEntity describes a response with status code 422, with default header values.

Payment is aborted by a control plugin
*/
type CompleteTransactionUnprocessableEntity struct {
}

// IsSuccess returns true when this complete transaction unprocessable entity response has a 2xx status code
func (o *CompleteTransactionUnprocessableEntity) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction unprocessable entity response has a 3xx status code
func (o *CompleteTransactionUnprocessableEntity) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction unprocessable entity response has a 4xx status code
func (o *CompleteTransactionUnprocessableEntity) IsClientError() bool {
	return true
}

// IsServerError returns true when this complete transaction unprocessable entity response has a 5xx status code
func (o *CompleteTransactionUnprocessableEntity) IsServerError() bool {
	return false
}

// IsCode returns true when this complete transaction unprocessable entity response a status code equal to that given
func (o *CompleteTransactionUnprocessableEntity) IsCode(code int) bool {
	return code == 422
}

// Code gets the status code for the complete transaction unprocessable entity response
func (o *CompleteTransactionUnprocessableEntity) Code() int {
	return 422
}

func (o *CompleteTransactionUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionUnprocessableEntity ", 422)
}

func (o *CompleteTransactionUnprocessableEntity) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionUnprocessableEntity ", 422)
}

func (o *CompleteTransactionUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionBadGateway creates a CompleteTransactionBadGateway with default headers values
func NewCompleteTransactionBadGateway() *CompleteTransactionBadGateway {
	return &CompleteTransactionBadGateway{}
}

/*
CompleteTransactionBadGateway describes a response with status code 502, with default header values.

Failed to submit payment transaction
*/
type CompleteTransactionBadGateway struct {
}

// IsSuccess returns true when this complete transaction bad gateway response has a 2xx status code
func (o *CompleteTransactionBadGateway) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction bad gateway response has a 3xx status code
func (o *CompleteTransactionBadGateway) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction bad gateway response has a 4xx status code
func (o *CompleteTransactionBadGateway) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete transaction bad gateway response has a 5xx status code
func (o *CompleteTransactionBadGateway) IsServerError() bool {
	return true
}

// IsCode returns true when this complete transaction bad gateway response a status code equal to that given
func (o *CompleteTransactionBadGateway) IsCode(code int) bool {
	return code == 502
}

// Code gets the status code for the complete transaction bad gateway response
func (o *CompleteTransactionBadGateway) Code() int {
	return 502
}

func (o *CompleteTransactionBadGateway) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionBadGateway ", 502)
}

func (o *CompleteTransactionBadGateway) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionBadGateway ", 502)
}

func (o *CompleteTransactionBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionServiceUnavailable creates a CompleteTransactionServiceUnavailable with default headers values
func NewCompleteTransactionServiceUnavailable() *CompleteTransactionServiceUnavailable {
	return &CompleteTransactionServiceUnavailable{}
}

/*
CompleteTransactionServiceUnavailable describes a response with status code 503, with default header values.

Payment in unknown status, failed to receive gateway response
*/
type CompleteTransactionServiceUnavailable struct {
}

// IsSuccess returns true when this complete transaction service unavailable response has a 2xx status code
func (o *CompleteTransactionServiceUnavailable) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction service unavailable response has a 3xx status code
func (o *CompleteTransactionServiceUnavailable) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction service unavailable response has a 4xx status code
func (o *CompleteTransactionServiceUnavailable) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete transaction service unavailable response has a 5xx status code
func (o *CompleteTransactionServiceUnavailable) IsServerError() bool {
	return true
}

// IsCode returns true when this complete transaction service unavailable response a status code equal to that given
func (o *CompleteTransactionServiceUnavailable) IsCode(code int) bool {
	return code == 503
}

// Code gets the status code for the complete transaction service unavailable response
func (o *CompleteTransactionServiceUnavailable) Code() int {
	return 503
}

func (o *CompleteTransactionServiceUnavailable) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionServiceUnavailable ", 503)
}

func (o *CompleteTransactionServiceUnavailable) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionServiceUnavailable ", 503)
}

func (o *CompleteTransactionServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCompleteTransactionGatewayTimeout creates a CompleteTransactionGatewayTimeout with default headers values
func NewCompleteTransactionGatewayTimeout() *CompleteTransactionGatewayTimeout {
	return &CompleteTransactionGatewayTimeout{}
}

/*
CompleteTransactionGatewayTimeout describes a response with status code 504, with default header values.

Payment operation timeout
*/
type CompleteTransactionGatewayTimeout struct {
}

// IsSuccess returns true when this complete transaction gateway timeout response has a 2xx status code
func (o *CompleteTransactionGatewayTimeout) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this complete transaction gateway timeout response has a 3xx status code
func (o *CompleteTransactionGatewayTimeout) IsRedirect() bool {
	return false
}

// IsClientError returns true when this complete transaction gateway timeout response has a 4xx status code
func (o *CompleteTransactionGatewayTimeout) IsClientError() bool {
	return false
}

// IsServerError returns true when this complete transaction gateway timeout response has a 5xx status code
func (o *CompleteTransactionGatewayTimeout) IsServerError() bool {
	return true
}

// IsCode returns true when this complete transaction gateway timeout response a status code equal to that given
func (o *CompleteTransactionGatewayTimeout) IsCode(code int) bool {
	return code == 504
}

// Code gets the status code for the complete transaction gateway timeout response
func (o *CompleteTransactionGatewayTimeout) Code() int {
	return 504
}

func (o *CompleteTransactionGatewayTimeout) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionGatewayTimeout ", 504)
}

func (o *CompleteTransactionGatewayTimeout) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/payments/{paymentId}][%d] completeTransactionGatewayTimeout ", 504)
}

func (o *CompleteTransactionGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

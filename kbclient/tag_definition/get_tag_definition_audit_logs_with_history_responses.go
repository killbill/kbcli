// Code generated by go-swagger; DO NOT EDIT.

package tag_definition

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// GetTagDefinitionAuditLogsWithHistoryReader is a Reader for the GetTagDefinitionAuditLogsWithHistory structure.
type GetTagDefinitionAuditLogsWithHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagDefinitionAuditLogsWithHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagDefinitionAuditLogsWithHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTagDefinitionAuditLogsWithHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTagDefinitionAuditLogsWithHistoryOK creates a GetTagDefinitionAuditLogsWithHistoryOK with default headers values
func NewGetTagDefinitionAuditLogsWithHistoryOK() *GetTagDefinitionAuditLogsWithHistoryOK {
	return &GetTagDefinitionAuditLogsWithHistoryOK{}
}

/*
GetTagDefinitionAuditLogsWithHistoryOK describes a response with status code 200, with default header values.

successful operation
*/
type GetTagDefinitionAuditLogsWithHistoryOK struct {
	Payload []*kbmodel.AuditLog
}

// IsSuccess returns true when this get tag definition audit logs with history o k response has a 2xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tag definition audit logs with history o k response has a 3xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tag definition audit logs with history o k response has a 4xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tag definition audit logs with history o k response has a 5xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tag definition audit logs with history o k response a status code equal to that given
func (o *GetTagDefinitionAuditLogsWithHistoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tag definition audit logs with history o k response
func (o *GetTagDefinitionAuditLogsWithHistoryOK) Code() int {
	return 200
}

func (o *GetTagDefinitionAuditLogsWithHistoryOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/tagDefinitions/{tagDefinitionId}/auditLogsWithHistory][%d] getTagDefinitionAuditLogsWithHistoryOK  %+v", 200, o.Payload)
}

func (o *GetTagDefinitionAuditLogsWithHistoryOK) String() string {
	return fmt.Sprintf("[GET /1.0/kb/tagDefinitions/{tagDefinitionId}/auditLogsWithHistory][%d] getTagDefinitionAuditLogsWithHistoryOK  %+v", 200, o.Payload)
}

func (o *GetTagDefinitionAuditLogsWithHistoryOK) GetPayload() []*kbmodel.AuditLog {
	return o.Payload
}

func (o *GetTagDefinitionAuditLogsWithHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagDefinitionAuditLogsWithHistoryNotFound creates a GetTagDefinitionAuditLogsWithHistoryNotFound with default headers values
func NewGetTagDefinitionAuditLogsWithHistoryNotFound() *GetTagDefinitionAuditLogsWithHistoryNotFound {
	return &GetTagDefinitionAuditLogsWithHistoryNotFound{}
}

/*
GetTagDefinitionAuditLogsWithHistoryNotFound describes a response with status code 404, with default header values.

Account not found
*/
type GetTagDefinitionAuditLogsWithHistoryNotFound struct {
}

// IsSuccess returns true when this get tag definition audit logs with history not found response has a 2xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tag definition audit logs with history not found response has a 3xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tag definition audit logs with history not found response has a 4xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tag definition audit logs with history not found response has a 5xx status code
func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tag definition audit logs with history not found response a status code equal to that given
func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tag definition audit logs with history not found response
func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) Code() int {
	return 404
}

func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/tagDefinitions/{tagDefinitionId}/auditLogsWithHistory][%d] getTagDefinitionAuditLogsWithHistoryNotFound ", 404)
}

func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) String() string {
	return fmt.Sprintf("[GET /1.0/kb/tagDefinitions/{tagDefinitionId}/auditLogsWithHistory][%d] getTagDefinitionAuditLogsWithHistoryNotFound ", 404)
}

func (o *GetTagDefinitionAuditLogsWithHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// GetBlockingStatesReader is a Reader for the GetBlockingStates structure.
type GetBlockingStatesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlockingStatesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBlockingStatesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBlockingStatesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBlockingStatesOK creates a GetBlockingStatesOK with default headers values
func NewGetBlockingStatesOK() *GetBlockingStatesOK {
	return &GetBlockingStatesOK{}
}

/*
GetBlockingStatesOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBlockingStatesOK struct {
	Payload []*kbmodel.BlockingState
}

// IsSuccess returns true when this get blocking states o k response has a 2xx status code
func (o *GetBlockingStatesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get blocking states o k response has a 3xx status code
func (o *GetBlockingStatesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blocking states o k response has a 4xx status code
func (o *GetBlockingStatesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get blocking states o k response has a 5xx status code
func (o *GetBlockingStatesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get blocking states o k response a status code equal to that given
func (o *GetBlockingStatesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get blocking states o k response
func (o *GetBlockingStatesOK) Code() int {
	return 200
}

func (o *GetBlockingStatesOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/block][%d] getBlockingStatesOK  %+v", 200, o.Payload)
}

func (o *GetBlockingStatesOK) String() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/block][%d] getBlockingStatesOK  %+v", 200, o.Payload)
}

func (o *GetBlockingStatesOK) GetPayload() []*kbmodel.BlockingState {
	return o.Payload
}

func (o *GetBlockingStatesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlockingStatesBadRequest creates a GetBlockingStatesBadRequest with default headers values
func NewGetBlockingStatesBadRequest() *GetBlockingStatesBadRequest {
	return &GetBlockingStatesBadRequest{}
}

/*
GetBlockingStatesBadRequest describes a response with status code 400, with default header values.

Invalid account id supplied
*/
type GetBlockingStatesBadRequest struct {
}

// IsSuccess returns true when this get blocking states bad request response has a 2xx status code
func (o *GetBlockingStatesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get blocking states bad request response has a 3xx status code
func (o *GetBlockingStatesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blocking states bad request response has a 4xx status code
func (o *GetBlockingStatesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get blocking states bad request response has a 5xx status code
func (o *GetBlockingStatesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get blocking states bad request response a status code equal to that given
func (o *GetBlockingStatesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get blocking states bad request response
func (o *GetBlockingStatesBadRequest) Code() int {
	return 400
}

func (o *GetBlockingStatesBadRequest) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/block][%d] getBlockingStatesBadRequest ", 400)
}

func (o *GetBlockingStatesBadRequest) String() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/block][%d] getBlockingStatesBadRequest ", 400)
}

func (o *GetBlockingStatesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

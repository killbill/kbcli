// Code generated by go-swagger; DO NOT EDIT.

package account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/killbill/kbcli/v3/kbcommon"

	strfmt "github.com/go-openapi/strfmt"

	kbmodel "github.com/killbill/kbcli/v3/kbmodel"
)

// GetEmailNotificationsForAccountReader is a Reader for the GetEmailNotificationsForAccount structure.
type GetEmailNotificationsForAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEmailNotificationsForAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetEmailNotificationsForAccountOK()
		result.HttpResponse = response
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 204:
		result := NewGetEmailNotificationsForAccountNoContent()
		result.HttpResponse = response
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		errorResult := kbcommon.NewKillbillError(response.Code())
		if err := consumer.Consume(response.Body(), &errorResult); err != nil && err != io.EOF {
			return nil, err
		}
		return nil, errorResult
	}
}

// NewGetEmailNotificationsForAccountOK creates a GetEmailNotificationsForAccountOK with default headers values
func NewGetEmailNotificationsForAccountOK() *GetEmailNotificationsForAccountOK {
	return &GetEmailNotificationsForAccountOK{}
}

/*GetEmailNotificationsForAccountOK handles this case with default header values.

successful operation
*/
type GetEmailNotificationsForAccountOK struct {
	Payload *kbmodel.InvoiceEmail

	HttpResponse runtime.ClientResponse
}

func (o *GetEmailNotificationsForAccountOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/emailNotifications][%d] getEmailNotificationsForAccountOK  %+v", 200, o.Payload)
}

func (o *GetEmailNotificationsForAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kbmodel.InvoiceEmail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEmailNotificationsForAccountNoContent creates a GetEmailNotificationsForAccountNoContent with default headers values
func NewGetEmailNotificationsForAccountNoContent() *GetEmailNotificationsForAccountNoContent {
	return &GetEmailNotificationsForAccountNoContent{}
}

/*GetEmailNotificationsForAccountNoContent handles this case with default header values.

Successful operation
*/
type GetEmailNotificationsForAccountNoContent struct {
	HttpResponse runtime.ClientResponse
}

func (o *GetEmailNotificationsForAccountNoContent) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/emailNotifications][%d] getEmailNotificationsForAccountNoContent ", 204)
}

func (o *GetEmailNotificationsForAccountNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEmailNotificationsForAccountBadRequest creates a GetEmailNotificationsForAccountBadRequest with default headers values
func NewGetEmailNotificationsForAccountBadRequest() *GetEmailNotificationsForAccountBadRequest {
	return &GetEmailNotificationsForAccountBadRequest{}
}

/*GetEmailNotificationsForAccountBadRequest handles this case with default header values.

Invalid account id supplied
*/
type GetEmailNotificationsForAccountBadRequest struct {
	HttpResponse runtime.ClientResponse
}

func (o *GetEmailNotificationsForAccountBadRequest) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/emailNotifications][%d] getEmailNotificationsForAccountBadRequest ", 400)
}

func (o *GetEmailNotificationsForAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEmailNotificationsForAccountNotFound creates a GetEmailNotificationsForAccountNotFound with default headers values
func NewGetEmailNotificationsForAccountNotFound() *GetEmailNotificationsForAccountNotFound {
	return &GetEmailNotificationsForAccountNotFound{}
}

/*GetEmailNotificationsForAccountNotFound handles this case with default header values.

Account not found
*/
type GetEmailNotificationsForAccountNotFound struct {
	HttpResponse runtime.ClientResponse
}

func (o *GetEmailNotificationsForAccountNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/accounts/{accountId}/emailNotifications][%d] getEmailNotificationsForAccountNotFound ", 404)
}

func (o *GetEmailNotificationsForAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

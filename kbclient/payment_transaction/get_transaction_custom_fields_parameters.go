// Code generated by go-swagger; DO NOT EDIT.

package payment_transaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetTransactionCustomFieldsParams creates a new GetTransactionCustomFieldsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTransactionCustomFieldsParams() *GetTransactionCustomFieldsParams {
	return &GetTransactionCustomFieldsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTransactionCustomFieldsParamsWithTimeout creates a new GetTransactionCustomFieldsParams object
// with the ability to set a timeout on a request.
func NewGetTransactionCustomFieldsParamsWithTimeout(timeout time.Duration) *GetTransactionCustomFieldsParams {
	return &GetTransactionCustomFieldsParams{
		timeout: timeout,
	}
}

// NewGetTransactionCustomFieldsParamsWithContext creates a new GetTransactionCustomFieldsParams object
// with the ability to set a context for a request.
func NewGetTransactionCustomFieldsParamsWithContext(ctx context.Context) *GetTransactionCustomFieldsParams {
	return &GetTransactionCustomFieldsParams{
		Context: ctx,
	}
}

// NewGetTransactionCustomFieldsParamsWithHTTPClient creates a new GetTransactionCustomFieldsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTransactionCustomFieldsParamsWithHTTPClient(client *http.Client) *GetTransactionCustomFieldsParams {
	return &GetTransactionCustomFieldsParams{
		HTTPClient: client,
	}
}

/*
GetTransactionCustomFieldsParams contains all the parameters to send to the API endpoint

	for the get transaction custom fields operation.

	Typically these are written to a http.Request.
*/
type GetTransactionCustomFieldsParams struct {

	// Audit.
	//
	// Default: "NONE"
	Audit *string

	// TransactionID.
	//
	// Format: uuid
	TransactionID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get transaction custom fields params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTransactionCustomFieldsParams) WithDefaults() *GetTransactionCustomFieldsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get transaction custom fields params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTransactionCustomFieldsParams) SetDefaults() {
	var (
		auditDefault = string("NONE")
	)

	val := GetTransactionCustomFieldsParams{
		Audit: &auditDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) WithTimeout(timeout time.Duration) *GetTransactionCustomFieldsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) WithContext(ctx context.Context) *GetTransactionCustomFieldsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) WithHTTPClient(client *http.Client) *GetTransactionCustomFieldsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAudit adds the audit to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) WithAudit(audit *string) *GetTransactionCustomFieldsParams {
	o.SetAudit(audit)
	return o
}

// SetAudit adds the audit to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) SetAudit(audit *string) {
	o.Audit = audit
}

// WithTransactionID adds the transactionID to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) WithTransactionID(transactionID strfmt.UUID) *GetTransactionCustomFieldsParams {
	o.SetTransactionID(transactionID)
	return o
}

// SetTransactionID adds the transactionId to the get transaction custom fields params
func (o *GetTransactionCustomFieldsParams) SetTransactionID(transactionID strfmt.UUID) {
	o.TransactionID = transactionID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTransactionCustomFieldsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Audit != nil {

		// query param audit
		var qrAudit string

		if o.Audit != nil {
			qrAudit = *o.Audit
		}
		qAudit := qrAudit
		if qAudit != "" {

			if err := r.SetQueryParam("audit", qAudit); err != nil {
				return err
			}
		}
	}

	// path param transactionId
	if err := r.SetPathParam("transactionId", o.TransactionID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

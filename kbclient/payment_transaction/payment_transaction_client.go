// Code generated by go-swagger; DO NOT EDIT.

package payment_transaction

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new payment transaction API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for payment transaction API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateTransactionCustomFields(params *CreateTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateTransactionCustomFieldsCreated, error)

	CreateTransactionTags(params *CreateTransactionTagsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateTransactionTagsCreated, error)

	DeleteTransactionCustomFields(params *DeleteTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteTransactionCustomFieldsNoContent, error)

	DeleteTransactionTags(params *DeleteTransactionTagsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteTransactionTagsNoContent, error)

	GetPaymentByTransactionExternalKey(params *GetPaymentByTransactionExternalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentByTransactionExternalKeyOK, error)

	GetPaymentByTransactionID(params *GetPaymentByTransactionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentByTransactionIDOK, error)

	GetTransactionAuditLogsWithHistory(params *GetTransactionAuditLogsWithHistoryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetTransactionAuditLogsWithHistoryOK, error)

	GetTransactionCustomFields(params *GetTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetTransactionCustomFieldsOK, error)

	GetTransactionTags(params *GetTransactionTagsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetTransactionTagsOK, error)

	ModifyTransactionCustomFields(params *ModifyTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ModifyTransactionCustomFieldsNoContent, error)

	NotifyStateChanged(params *NotifyStateChangedParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*NotifyStateChangedCreated, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreateTransactionCustomFields adds custom fields to payment transaction
*/
func (a *Client) CreateTransactionCustomFields(params *CreateTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateTransactionCustomFieldsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateTransactionCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createTransactionCustomFields",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateTransactionCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateTransactionCustomFieldsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createTransactionCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
CreateTransactionTags adds tags to payment transaction
*/
func (a *Client) CreateTransactionTags(params *CreateTransactionTagsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreateTransactionTagsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateTransactionTagsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createTransactionTags",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateTransactionTagsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateTransactionTagsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createTransactionTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteTransactionCustomFields removes custom fields from payment transaction
*/
func (a *Client) DeleteTransactionCustomFields(params *DeleteTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteTransactionCustomFieldsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteTransactionCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteTransactionCustomFields",
		Method:             "DELETE",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteTransactionCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteTransactionCustomFieldsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteTransactionCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeleteTransactionTags removes tags from payment transaction
*/
func (a *Client) DeleteTransactionTags(params *DeleteTransactionTagsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeleteTransactionTagsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteTransactionTagsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deleteTransactionTags",
		Method:             "DELETE",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteTransactionTagsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteTransactionTagsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deleteTransactionTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentByTransactionExternalKey retrieves a payment by transaction external key
*/
func (a *Client) GetPaymentByTransactionExternalKey(params *GetPaymentByTransactionExternalKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentByTransactionExternalKeyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentByTransactionExternalKeyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentByTransactionExternalKey",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentTransactions",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentByTransactionExternalKeyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentByTransactionExternalKeyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentByTransactionExternalKey: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentByTransactionID retrieves a payment by transaction id
*/
func (a *Client) GetPaymentByTransactionID(params *GetPaymentByTransactionIDParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentByTransactionIDOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentByTransactionIDParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentByTransactionId",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentByTransactionIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentByTransactionIDOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentByTransactionId: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetTransactionAuditLogsWithHistory retrieves payment transaction audit logs with history by id
*/
func (a *Client) GetTransactionAuditLogsWithHistory(params *GetTransactionAuditLogsWithHistoryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetTransactionAuditLogsWithHistoryOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTransactionAuditLogsWithHistoryParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getTransactionAuditLogsWithHistory",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/auditLogsWithHistory",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetTransactionAuditLogsWithHistoryReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetTransactionAuditLogsWithHistoryOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getTransactionAuditLogsWithHistory: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetTransactionCustomFields retrieves payment transaction custom fields
*/
func (a *Client) GetTransactionCustomFields(params *GetTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetTransactionCustomFieldsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTransactionCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getTransactionCustomFields",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetTransactionCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetTransactionCustomFieldsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getTransactionCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetTransactionTags retrieves payment transaction tags
*/
func (a *Client) GetTransactionTags(params *GetTransactionTagsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetTransactionTagsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetTransactionTagsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getTransactionTags",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/tags",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetTransactionTagsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetTransactionTagsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getTransactionTags: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ModifyTransactionCustomFields modifies custom fields to payment transaction
*/
func (a *Client) ModifyTransactionCustomFields(params *ModifyTransactionCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ModifyTransactionCustomFieldsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewModifyTransactionCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "modifyTransactionCustomFields",
		Method:             "PUT",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ModifyTransactionCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ModifyTransactionCustomFieldsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for modifyTransactionCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
NotifyStateChanged marks a pending payment transaction as succeeded or failed
*/
func (a *Client) NotifyStateChanged(params *NotifyStateChangedParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*NotifyStateChangedCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewNotifyStateChangedParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "notifyStateChanged",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentTransactions/{transactionId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &NotifyStateChangedReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*NotifyStateChangedCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for notifyStateChanged: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

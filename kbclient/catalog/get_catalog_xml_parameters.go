// Code generated by go-swagger; DO NOT EDIT.

package catalog

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetCatalogXMLParams creates a new GetCatalogXMLParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetCatalogXMLParams() *GetCatalogXMLParams {
	return &GetCatalogXMLParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetCatalogXMLParamsWithTimeout creates a new GetCatalogXMLParams object
// with the ability to set a timeout on a request.
func NewGetCatalogXMLParamsWithTimeout(timeout time.Duration) *GetCatalogXMLParams {
	return &GetCatalogXMLParams{
		timeout: timeout,
	}
}

// NewGetCatalogXMLParamsWithContext creates a new GetCatalogXMLParams object
// with the ability to set a context for a request.
func NewGetCatalogXMLParamsWithContext(ctx context.Context) *GetCatalogXMLParams {
	return &GetCatalogXMLParams{
		Context: ctx,
	}
}

// NewGetCatalogXMLParamsWithHTTPClient creates a new GetCatalogXMLParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetCatalogXMLParamsWithHTTPClient(client *http.Client) *GetCatalogXMLParams {
	return &GetCatalogXMLParams{
		HTTPClient: client,
	}
}

/*
GetCatalogXMLParams contains all the parameters to send to the API endpoint

	for the get catalog Xml operation.

	Typically these are written to a http.Request.
*/
type GetCatalogXMLParams struct {

	// AccountID.
	//
	// Format: uuid
	AccountID *strfmt.UUID

	// RequestedDate.
	//
	// Format: date-time
	RequestedDate *strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get catalog Xml params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCatalogXMLParams) WithDefaults() *GetCatalogXMLParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get catalog Xml params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetCatalogXMLParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get catalog Xml params
func (o *GetCatalogXMLParams) WithTimeout(timeout time.Duration) *GetCatalogXMLParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get catalog Xml params
func (o *GetCatalogXMLParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get catalog Xml params
func (o *GetCatalogXMLParams) WithContext(ctx context.Context) *GetCatalogXMLParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get catalog Xml params
func (o *GetCatalogXMLParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get catalog Xml params
func (o *GetCatalogXMLParams) WithHTTPClient(client *http.Client) *GetCatalogXMLParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get catalog Xml params
func (o *GetCatalogXMLParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get catalog Xml params
func (o *GetCatalogXMLParams) WithAccountID(accountID *strfmt.UUID) *GetCatalogXMLParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get catalog Xml params
func (o *GetCatalogXMLParams) SetAccountID(accountID *strfmt.UUID) {
	o.AccountID = accountID
}

// WithRequestedDate adds the requestedDate to the get catalog Xml params
func (o *GetCatalogXMLParams) WithRequestedDate(requestedDate *strfmt.DateTime) *GetCatalogXMLParams {
	o.SetRequestedDate(requestedDate)
	return o
}

// SetRequestedDate adds the requestedDate to the get catalog Xml params
func (o *GetCatalogXMLParams) SetRequestedDate(requestedDate *strfmt.DateTime) {
	o.RequestedDate = requestedDate
}

// WriteToRequest writes these params to a swagger request
func (o *GetCatalogXMLParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountID != nil {

		// query param accountId
		var qrAccountID strfmt.UUID

		if o.AccountID != nil {
			qrAccountID = *o.AccountID
		}
		qAccountID := qrAccountID.String()
		if qAccountID != "" {

			if err := r.SetQueryParam("accountId", qAccountID); err != nil {
				return err
			}
		}
	}

	if o.RequestedDate != nil {

		// query param requestedDate
		var qrRequestedDate strfmt.DateTime

		if o.RequestedDate != nil {
			qrRequestedDate = *o.RequestedDate
		}
		qRequestedDate := qrRequestedDate.String()
		if qRequestedDate != "" {

			if err := r.SetQueryParam("requestedDate", qRequestedDate); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

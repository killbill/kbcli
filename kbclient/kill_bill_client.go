// Code generated by go-swagger; DO NOT EDIT.

package kbclient

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbclient/account"
	"github.com/killbill/kbcli/v2/kbclient/admin"
	"github.com/killbill/kbcli/v2/kbclient/bundle"
	"github.com/killbill/kbcli/v2/kbclient/catalog"
	"github.com/killbill/kbcli/v2/kbclient/credit"
	"github.com/killbill/kbcli/v2/kbclient/custom_field"
	"github.com/killbill/kbcli/v2/kbclient/export"
	"github.com/killbill/kbcli/v2/kbclient/invoice"
	"github.com/killbill/kbcli/v2/kbclient/invoice_item"
	"github.com/killbill/kbcli/v2/kbclient/invoice_payment"
	"github.com/killbill/kbcli/v2/kbclient/nodes_info"
	"github.com/killbill/kbcli/v2/kbclient/overdue"
	"github.com/killbill/kbcli/v2/kbclient/payment"
	"github.com/killbill/kbcli/v2/kbclient/payment_gateway"
	"github.com/killbill/kbcli/v2/kbclient/payment_method"
	"github.com/killbill/kbcli/v2/kbclient/payment_transaction"
	"github.com/killbill/kbcli/v2/kbclient/plugin_info"
	securityops "github.com/killbill/kbcli/v2/kbclient/security"
	"github.com/killbill/kbcli/v2/kbclient/subscription"
	"github.com/killbill/kbcli/v2/kbclient/tag"
	"github.com/killbill/kbcli/v2/kbclient/tag_definition"
	"github.com/killbill/kbcli/v2/kbclient/tenant"
	"github.com/killbill/kbcli/v2/kbclient/usage"
)

// Default kill bill HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new kill bill HTTP client.
func NewHTTPClient(formats strfmt.Registry) *KillBill {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new kill bill HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *KillBill {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new kill bill client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *KillBill {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(KillBill)
	cli.Transport = transport
	cli.Account = account.New(transport, formats)
	cli.Admin = admin.New(transport, formats)
	cli.Bundle = bundle.New(transport, formats)
	cli.Catalog = catalog.New(transport, formats)
	cli.Credit = credit.New(transport, formats)
	cli.CustomField = custom_field.New(transport, formats)
	cli.Export = export.New(transport, formats)
	cli.Invoice = invoice.New(transport, formats)
	cli.InvoiceItem = invoice_item.New(transport, formats)
	cli.InvoicePayment = invoice_payment.New(transport, formats)
	cli.NodesInfo = nodes_info.New(transport, formats)
	cli.Overdue = overdue.New(transport, formats)
	cli.Payment = payment.New(transport, formats)
	cli.PaymentGateway = payment_gateway.New(transport, formats)
	cli.PaymentMethod = payment_method.New(transport, formats)
	cli.PaymentTransaction = payment_transaction.New(transport, formats)
	cli.PluginInfo = plugin_info.New(transport, formats)
	cli.Security = securityops.New(transport, formats)
	cli.Subscription = subscription.New(transport, formats)
	cli.Tag = tag.New(transport, formats)
	cli.TagDefinition = tag_definition.New(transport, formats)
	cli.Tenant = tenant.New(transport, formats)
	cli.Usage = usage.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// KillBill is a client for kill bill
type KillBill struct {
	Account account.ClientService

	Admin admin.ClientService

	Bundle bundle.ClientService

	Catalog catalog.ClientService

	Credit credit.ClientService

	CustomField custom_field.ClientService

	Export export.ClientService

	Invoice invoice.ClientService

	InvoiceItem invoice_item.ClientService

	InvoicePayment invoice_payment.ClientService

	NodesInfo nodes_info.ClientService

	Overdue overdue.ClientService

	Payment payment.ClientService

	PaymentGateway payment_gateway.ClientService

	PaymentMethod payment_method.ClientService

	PaymentTransaction payment_transaction.ClientService

	PluginInfo plugin_info.ClientService

	Security securityops.ClientService

	Subscription subscription.ClientService

	Tag tag.ClientService

	TagDefinition tag_definition.ClientService

	Tenant tenant.ClientService

	Usage usage.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *KillBill) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.Account.SetTransport(transport)
	c.Admin.SetTransport(transport)
	c.Bundle.SetTransport(transport)
	c.Catalog.SetTransport(transport)
	c.Credit.SetTransport(transport)
	c.CustomField.SetTransport(transport)
	c.Export.SetTransport(transport)
	c.Invoice.SetTransport(transport)
	c.InvoiceItem.SetTransport(transport)
	c.InvoicePayment.SetTransport(transport)
	c.NodesInfo.SetTransport(transport)
	c.Overdue.SetTransport(transport)
	c.Payment.SetTransport(transport)
	c.PaymentGateway.SetTransport(transport)
	c.PaymentMethod.SetTransport(transport)
	c.PaymentTransaction.SetTransport(transport)
	c.PluginInfo.SetTransport(transport)
	c.Security.SetTransport(transport)
	c.Subscription.SetTransport(transport)
	c.Tag.SetTransport(transport)
	c.TagDefinition.SetTransport(transport)
	c.Tenant.SetTransport(transport)
	c.Usage.SetTransport(transport)
}

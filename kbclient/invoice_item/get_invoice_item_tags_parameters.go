// Code generated by go-swagger; DO NOT EDIT.

package invoice_item

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetInvoiceItemTagsParams creates a new GetInvoiceItemTagsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetInvoiceItemTagsParams() *GetInvoiceItemTagsParams {
	return &GetInvoiceItemTagsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetInvoiceItemTagsParamsWithTimeout creates a new GetInvoiceItemTagsParams object
// with the ability to set a timeout on a request.
func NewGetInvoiceItemTagsParamsWithTimeout(timeout time.Duration) *GetInvoiceItemTagsParams {
	return &GetInvoiceItemTagsParams{
		timeout: timeout,
	}
}

// NewGetInvoiceItemTagsParamsWithContext creates a new GetInvoiceItemTagsParams object
// with the ability to set a context for a request.
func NewGetInvoiceItemTagsParamsWithContext(ctx context.Context) *GetInvoiceItemTagsParams {
	return &GetInvoiceItemTagsParams{
		Context: ctx,
	}
}

// NewGetInvoiceItemTagsParamsWithHTTPClient creates a new GetInvoiceItemTagsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetInvoiceItemTagsParamsWithHTTPClient(client *http.Client) *GetInvoiceItemTagsParams {
	return &GetInvoiceItemTagsParams{
		HTTPClient: client,
	}
}

/*
GetInvoiceItemTagsParams contains all the parameters to send to the API endpoint

	for the get invoice item tags operation.

	Typically these are written to a http.Request.
*/
type GetInvoiceItemTagsParams struct {

	// AccountID.
	//
	// Format: uuid
	AccountID strfmt.UUID

	// Audit.
	//
	// Default: "NONE"
	Audit *string

	// IncludedDeleted.
	IncludedDeleted *bool

	// InvoiceItemID.
	//
	// Format: uuid
	InvoiceItemID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get invoice item tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoiceItemTagsParams) WithDefaults() *GetInvoiceItemTagsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get invoice item tags params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetInvoiceItemTagsParams) SetDefaults() {
	var (
		auditDefault = string("NONE")

		includedDeletedDefault = bool(false)
	)

	val := GetInvoiceItemTagsParams{
		Audit:           &auditDefault,
		IncludedDeleted: &includedDeletedDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithTimeout(timeout time.Duration) *GetInvoiceItemTagsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithContext(ctx context.Context) *GetInvoiceItemTagsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithHTTPClient(client *http.Client) *GetInvoiceItemTagsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithAccountID(accountID strfmt.UUID) *GetInvoiceItemTagsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetAccountID(accountID strfmt.UUID) {
	o.AccountID = accountID
}

// WithAudit adds the audit to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithAudit(audit *string) *GetInvoiceItemTagsParams {
	o.SetAudit(audit)
	return o
}

// SetAudit adds the audit to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetAudit(audit *string) {
	o.Audit = audit
}

// WithIncludedDeleted adds the includedDeleted to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithIncludedDeleted(includedDeleted *bool) *GetInvoiceItemTagsParams {
	o.SetIncludedDeleted(includedDeleted)
	return o
}

// SetIncludedDeleted adds the includedDeleted to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetIncludedDeleted(includedDeleted *bool) {
	o.IncludedDeleted = includedDeleted
}

// WithInvoiceItemID adds the invoiceItemID to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) WithInvoiceItemID(invoiceItemID strfmt.UUID) *GetInvoiceItemTagsParams {
	o.SetInvoiceItemID(invoiceItemID)
	return o
}

// SetInvoiceItemID adds the invoiceItemId to the get invoice item tags params
func (o *GetInvoiceItemTagsParams) SetInvoiceItemID(invoiceItemID strfmt.UUID) {
	o.InvoiceItemID = invoiceItemID
}

// WriteToRequest writes these params to a swagger request
func (o *GetInvoiceItemTagsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param accountId
	qrAccountID := o.AccountID
	qAccountID := qrAccountID.String()
	if qAccountID != "" {

		if err := r.SetQueryParam("accountId", qAccountID); err != nil {
			return err
		}
	}

	if o.Audit != nil {

		// query param audit
		var qrAudit string

		if o.Audit != nil {
			qrAudit = *o.Audit
		}
		qAudit := qrAudit
		if qAudit != "" {

			if err := r.SetQueryParam("audit", qAudit); err != nil {
				return err
			}
		}
	}

	if o.IncludedDeleted != nil {

		// query param includedDeleted
		var qrIncludedDeleted bool

		if o.IncludedDeleted != nil {
			qrIncludedDeleted = *o.IncludedDeleted
		}
		qIncludedDeleted := swag.FormatBool(qrIncludedDeleted)
		if qIncludedDeleted != "" {

			if err := r.SetQueryParam("includedDeleted", qIncludedDeleted); err != nil {
				return err
			}
		}
	}

	// path param invoiceItemId
	if err := r.SetPathParam("invoiceItemId", o.InvoiceItemID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

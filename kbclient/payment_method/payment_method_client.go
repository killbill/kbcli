// Code generated by go-swagger; DO NOT EDIT.

package payment_method

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new payment method API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for payment method API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreatePaymentMethodCustomFields(params *CreatePaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreatePaymentMethodCustomFieldsCreated, error)

	DeletePaymentMethod(params *DeletePaymentMethodParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeletePaymentMethodNoContent, error)

	DeletePaymentMethodCustomFields(params *DeletePaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeletePaymentMethodCustomFieldsNoContent, error)

	GetPaymentMethod(params *GetPaymentMethodParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodOK, error)

	GetPaymentMethodAuditLogsWithHistory(params *GetPaymentMethodAuditLogsWithHistoryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodAuditLogsWithHistoryOK, error)

	GetPaymentMethodByKey(params *GetPaymentMethodByKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodByKeyOK, error)

	GetPaymentMethodCustomFields(params *GetPaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodCustomFieldsOK, error)

	GetPaymentMethods(params *GetPaymentMethodsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodsOK, error)

	ModifyPaymentMethodCustomFields(params *ModifyPaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ModifyPaymentMethodCustomFieldsNoContent, error)

	SearchPaymentMethods(params *SearchPaymentMethodsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SearchPaymentMethodsOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
CreatePaymentMethodCustomFields adds custom fields to payment method
*/
func (a *Client) CreatePaymentMethodCustomFields(params *CreatePaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*CreatePaymentMethodCustomFieldsCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreatePaymentMethodCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "createPaymentMethodCustomFields",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreatePaymentMethodCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreatePaymentMethodCustomFieldsCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for createPaymentMethodCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeletePaymentMethod deletes a payment method
*/
func (a *Client) DeletePaymentMethod(params *DeletePaymentMethodParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeletePaymentMethodNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletePaymentMethodParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deletePaymentMethod",
		Method:             "DELETE",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeletePaymentMethodReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeletePaymentMethodNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deletePaymentMethod: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
DeletePaymentMethodCustomFields removes custom fields from payment method
*/
func (a *Client) DeletePaymentMethodCustomFields(params *DeletePaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*DeletePaymentMethodCustomFieldsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeletePaymentMethodCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "deletePaymentMethodCustomFields",
		Method:             "DELETE",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeletePaymentMethodCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeletePaymentMethodCustomFieldsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for deletePaymentMethodCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentMethod retrieves a payment method by id
*/
func (a *Client) GetPaymentMethod(params *GetPaymentMethodParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentMethodParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentMethod",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentMethodReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentMethodOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentMethod: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentMethodAuditLogsWithHistory retrieves payment method audit logs with history by id
*/
func (a *Client) GetPaymentMethodAuditLogsWithHistory(params *GetPaymentMethodAuditLogsWithHistoryParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodAuditLogsWithHistoryOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentMethodAuditLogsWithHistoryParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentMethodAuditLogsWithHistory",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}/auditLogsWithHistory",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentMethodAuditLogsWithHistoryReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentMethodAuditLogsWithHistoryOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentMethodAuditLogsWithHistory: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentMethodByKey retrieves a payment method by external key
*/
func (a *Client) GetPaymentMethodByKey(params *GetPaymentMethodByKeyParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodByKeyOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentMethodByKeyParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentMethodByKey",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentMethods",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentMethodByKeyReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentMethodByKeyOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentMethodByKey: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentMethodCustomFields retrieves payment method custom fields
*/
func (a *Client) GetPaymentMethodCustomFields(params *GetPaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodCustomFieldsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentMethodCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentMethodCustomFields",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentMethodCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentMethodCustomFieldsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentMethodCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
GetPaymentMethods lists payment methods
*/
func (a *Client) GetPaymentMethods(params *GetPaymentMethodsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*GetPaymentMethodsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetPaymentMethodsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "getPaymentMethods",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentMethods/pagination",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetPaymentMethodsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetPaymentMethodsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for getPaymentMethods: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ModifyPaymentMethodCustomFields modifies custom fields to payment method
*/
func (a *Client) ModifyPaymentMethodCustomFields(params *ModifyPaymentMethodCustomFieldsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ModifyPaymentMethodCustomFieldsNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewModifyPaymentMethodCustomFieldsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "modifyPaymentMethodCustomFields",
		Method:             "PUT",
		PathPattern:        "/1.0/kb/paymentMethods/{paymentMethodId}/customFields",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ModifyPaymentMethodCustomFieldsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ModifyPaymentMethodCustomFieldsNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for modifyPaymentMethodCustomFields: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
SearchPaymentMethods searches payment methods
*/
func (a *Client) SearchPaymentMethods(params *SearchPaymentMethodsParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*SearchPaymentMethodsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSearchPaymentMethodsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "searchPaymentMethods",
		Method:             "GET",
		PathPattern:        "/1.0/kb/paymentMethods/search/{searchKey}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &SearchPaymentMethodsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SearchPaymentMethodsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for searchPaymentMethods: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}

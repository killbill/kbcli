// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ResumeBundleReader is a Reader for the ResumeBundle structure.
type ResumeBundleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResumeBundleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewResumeBundleNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResumeBundleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResumeBundleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewResumeBundleNoContent creates a ResumeBundleNoContent with default headers values
func NewResumeBundleNoContent() *ResumeBundleNoContent {
	return &ResumeBundleNoContent{}
}

/*
ResumeBundleNoContent describes a response with status code 204, with default header values.

Successful operation
*/
type ResumeBundleNoContent struct {
}

// IsSuccess returns true when this resume bundle no content response has a 2xx status code
func (o *ResumeBundleNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resume bundle no content response has a 3xx status code
func (o *ResumeBundleNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume bundle no content response has a 4xx status code
func (o *ResumeBundleNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this resume bundle no content response has a 5xx status code
func (o *ResumeBundleNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this resume bundle no content response a status code equal to that given
func (o *ResumeBundleNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the resume bundle no content response
func (o *ResumeBundleNoContent) Code() int {
	return 204
}

func (o *ResumeBundleNoContent) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/bundles/{bundleId}/resume][%d] resumeBundleNoContent ", 204)
}

func (o *ResumeBundleNoContent) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/bundles/{bundleId}/resume][%d] resumeBundleNoContent ", 204)
}

func (o *ResumeBundleNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeBundleBadRequest creates a ResumeBundleBadRequest with default headers values
func NewResumeBundleBadRequest() *ResumeBundleBadRequest {
	return &ResumeBundleBadRequest{}
}

/*
ResumeBundleBadRequest describes a response with status code 400, with default header values.

Invalid bundle id supplied
*/
type ResumeBundleBadRequest struct {
}

// IsSuccess returns true when this resume bundle bad request response has a 2xx status code
func (o *ResumeBundleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resume bundle bad request response has a 3xx status code
func (o *ResumeBundleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume bundle bad request response has a 4xx status code
func (o *ResumeBundleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this resume bundle bad request response has a 5xx status code
func (o *ResumeBundleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this resume bundle bad request response a status code equal to that given
func (o *ResumeBundleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the resume bundle bad request response
func (o *ResumeBundleBadRequest) Code() int {
	return 400
}

func (o *ResumeBundleBadRequest) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/bundles/{bundleId}/resume][%d] resumeBundleBadRequest ", 400)
}

func (o *ResumeBundleBadRequest) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/bundles/{bundleId}/resume][%d] resumeBundleBadRequest ", 400)
}

func (o *ResumeBundleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResumeBundleNotFound creates a ResumeBundleNotFound with default headers values
func NewResumeBundleNotFound() *ResumeBundleNotFound {
	return &ResumeBundleNotFound{}
}

/*
ResumeBundleNotFound describes a response with status code 404, with default header values.

Bundle not found
*/
type ResumeBundleNotFound struct {
}

// IsSuccess returns true when this resume bundle not found response has a 2xx status code
func (o *ResumeBundleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resume bundle not found response has a 3xx status code
func (o *ResumeBundleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resume bundle not found response has a 4xx status code
func (o *ResumeBundleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resume bundle not found response has a 5xx status code
func (o *ResumeBundleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resume bundle not found response a status code equal to that given
func (o *ResumeBundleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the resume bundle not found response
func (o *ResumeBundleNotFound) Code() int {
	return 404
}

func (o *ResumeBundleNotFound) Error() string {
	return fmt.Sprintf("[PUT /1.0/kb/bundles/{bundleId}/resume][%d] resumeBundleNotFound ", 404)
}

func (o *ResumeBundleNotFound) String() string {
	return fmt.Sprintf("[PUT /1.0/kb/bundles/{bundleId}/resume][%d] resumeBundleNotFound ", 404)
}

func (o *ResumeBundleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

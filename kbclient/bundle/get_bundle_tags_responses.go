// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// GetBundleTagsReader is a Reader for the GetBundleTags structure.
type GetBundleTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBundleTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBundleTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBundleTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBundleTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBundleTagsOK creates a GetBundleTagsOK with default headers values
func NewGetBundleTagsOK() *GetBundleTagsOK {
	return &GetBundleTagsOK{}
}

/*
GetBundleTagsOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBundleTagsOK struct {
	Payload []*kbmodel.Tag
}

// IsSuccess returns true when this get bundle tags o k response has a 2xx status code
func (o *GetBundleTagsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bundle tags o k response has a 3xx status code
func (o *GetBundleTagsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle tags o k response has a 4xx status code
func (o *GetBundleTagsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bundle tags o k response has a 5xx status code
func (o *GetBundleTagsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle tags o k response a status code equal to that given
func (o *GetBundleTagsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bundle tags o k response
func (o *GetBundleTagsOK) Code() int {
	return 200
}

func (o *GetBundleTagsOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsOK  %+v", 200, o.Payload)
}

func (o *GetBundleTagsOK) String() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsOK  %+v", 200, o.Payload)
}

func (o *GetBundleTagsOK) GetPayload() []*kbmodel.Tag {
	return o.Payload
}

func (o *GetBundleTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBundleTagsBadRequest creates a GetBundleTagsBadRequest with default headers values
func NewGetBundleTagsBadRequest() *GetBundleTagsBadRequest {
	return &GetBundleTagsBadRequest{}
}

/*
GetBundleTagsBadRequest describes a response with status code 400, with default header values.

Invalid bundle id supplied
*/
type GetBundleTagsBadRequest struct {
}

// IsSuccess returns true when this get bundle tags bad request response has a 2xx status code
func (o *GetBundleTagsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bundle tags bad request response has a 3xx status code
func (o *GetBundleTagsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle tags bad request response has a 4xx status code
func (o *GetBundleTagsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bundle tags bad request response has a 5xx status code
func (o *GetBundleTagsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle tags bad request response a status code equal to that given
func (o *GetBundleTagsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bundle tags bad request response
func (o *GetBundleTagsBadRequest) Code() int {
	return 400
}

func (o *GetBundleTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsBadRequest ", 400)
}

func (o *GetBundleTagsBadRequest) String() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsBadRequest ", 400)
}

func (o *GetBundleTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleTagsNotFound creates a GetBundleTagsNotFound with default headers values
func NewGetBundleTagsNotFound() *GetBundleTagsNotFound {
	return &GetBundleTagsNotFound{}
}

/*
GetBundleTagsNotFound describes a response with status code 404, with default header values.

Bundle not found
*/
type GetBundleTagsNotFound struct {
}

// IsSuccess returns true when this get bundle tags not found response has a 2xx status code
func (o *GetBundleTagsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bundle tags not found response has a 3xx status code
func (o *GetBundleTagsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle tags not found response has a 4xx status code
func (o *GetBundleTagsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bundle tags not found response has a 5xx status code
func (o *GetBundleTagsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle tags not found response a status code equal to that given
func (o *GetBundleTagsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bundle tags not found response
func (o *GetBundleTagsNotFound) Code() int {
	return 404
}

func (o *GetBundleTagsNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsNotFound ", 404)
}

func (o *GetBundleTagsNotFound) String() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsNotFound ", 404)
}

func (o *GetBundleTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/killbill/kbcli/v2/kbcommon"

	strfmt "github.com/go-openapi/strfmt"

	kbmodel "github.com/killbill/kbcli/v2/kbmodel"
)

// GetBundleTagsReader is a Reader for the GetBundleTags structure.
type GetBundleTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBundleTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBundleTagsOK()
		result.HttpResponse = response
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		errorResult := kbcommon.NewKillbillError(response.Code())
		if err := consumer.Consume(response.Body(), &errorResult); err != nil && err != io.EOF {
			return nil, err
		}
		return nil, errorResult
	}
}

// NewGetBundleTagsOK creates a GetBundleTagsOK with default headers values
func NewGetBundleTagsOK() *GetBundleTagsOK {
	return &GetBundleTagsOK{}
}

/*GetBundleTagsOK handles this case with default header values.

successful operation
*/
type GetBundleTagsOK struct {
	Payload []*kbmodel.Tag

	HttpResponse runtime.ClientResponse
}

func (o *GetBundleTagsOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsOK  %+v", 200, o.Payload)
}

func (o *GetBundleTagsOK) GetPayload() []*kbmodel.Tag {
	return o.Payload
}

func (o *GetBundleTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBundleTagsBadRequest creates a GetBundleTagsBadRequest with default headers values
func NewGetBundleTagsBadRequest() *GetBundleTagsBadRequest {
	return &GetBundleTagsBadRequest{}
}

/*GetBundleTagsBadRequest handles this case with default header values.

Invalid bundle id supplied
*/
type GetBundleTagsBadRequest struct {
	HttpResponse runtime.ClientResponse
}

func (o *GetBundleTagsBadRequest) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsBadRequest ", 400)
}

func (o *GetBundleTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleTagsNotFound creates a GetBundleTagsNotFound with default headers values
func NewGetBundleTagsNotFound() *GetBundleTagsNotFound {
	return &GetBundleTagsNotFound{}
}

/*GetBundleTagsNotFound handles this case with default header values.

Bundle not found
*/
type GetBundleTagsNotFound struct {
	HttpResponse runtime.ClientResponse
}

func (o *GetBundleTagsNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}/tags][%d] getBundleTagsNotFound ", 404)
}

func (o *GetBundleTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

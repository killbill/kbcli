// Code generated by go-swagger; DO NOT EDIT.

package bundle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/killbill/kbcli/v2/kbmodel"
)

// GetBundleReader is a Reader for the GetBundle structure.
type GetBundleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBundleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBundleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBundleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBundleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetBundleOK creates a GetBundleOK with default headers values
func NewGetBundleOK() *GetBundleOK {
	return &GetBundleOK{}
}

/*
GetBundleOK describes a response with status code 200, with default header values.

successful operation
*/
type GetBundleOK struct {
	Payload *kbmodel.Bundle
}

// IsSuccess returns true when this get bundle o k response has a 2xx status code
func (o *GetBundleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get bundle o k response has a 3xx status code
func (o *GetBundleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle o k response has a 4xx status code
func (o *GetBundleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get bundle o k response has a 5xx status code
func (o *GetBundleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle o k response a status code equal to that given
func (o *GetBundleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get bundle o k response
func (o *GetBundleOK) Code() int {
	return 200
}

func (o *GetBundleOK) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}][%d] getBundleOK  %+v", 200, o.Payload)
}

func (o *GetBundleOK) String() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}][%d] getBundleOK  %+v", 200, o.Payload)
}

func (o *GetBundleOK) GetPayload() *kbmodel.Bundle {
	return o.Payload
}

func (o *GetBundleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(kbmodel.Bundle)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBundleBadRequest creates a GetBundleBadRequest with default headers values
func NewGetBundleBadRequest() *GetBundleBadRequest {
	return &GetBundleBadRequest{}
}

/*
GetBundleBadRequest describes a response with status code 400, with default header values.

Invalid bundle id supplied
*/
type GetBundleBadRequest struct {
}

// IsSuccess returns true when this get bundle bad request response has a 2xx status code
func (o *GetBundleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bundle bad request response has a 3xx status code
func (o *GetBundleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle bad request response has a 4xx status code
func (o *GetBundleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bundle bad request response has a 5xx status code
func (o *GetBundleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle bad request response a status code equal to that given
func (o *GetBundleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get bundle bad request response
func (o *GetBundleBadRequest) Code() int {
	return 400
}

func (o *GetBundleBadRequest) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}][%d] getBundleBadRequest ", 400)
}

func (o *GetBundleBadRequest) String() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}][%d] getBundleBadRequest ", 400)
}

func (o *GetBundleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBundleNotFound creates a GetBundleNotFound with default headers values
func NewGetBundleNotFound() *GetBundleNotFound {
	return &GetBundleNotFound{}
}

/*
GetBundleNotFound describes a response with status code 404, with default header values.

Bundle not found
*/
type GetBundleNotFound struct {
}

// IsSuccess returns true when this get bundle not found response has a 2xx status code
func (o *GetBundleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get bundle not found response has a 3xx status code
func (o *GetBundleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get bundle not found response has a 4xx status code
func (o *GetBundleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get bundle not found response has a 5xx status code
func (o *GetBundleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get bundle not found response a status code equal to that given
func (o *GetBundleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get bundle not found response
func (o *GetBundleNotFound) Code() int {
	return 404
}

func (o *GetBundleNotFound) Error() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}][%d] getBundleNotFound ", 404)
}

func (o *GetBundleNotFound) String() string {
	return fmt.Sprintf("[GET /1.0/kb/bundles/{bundleId}][%d] getBundleNotFound ", 404)
}

func (o *GetBundleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package payment_gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new payment gateway API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for payment gateway API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	BuildComboFormDescriptor(params *BuildComboFormDescriptorParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BuildComboFormDescriptorOK, error)

	BuildFormDescriptor(params *BuildFormDescriptorParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BuildFormDescriptorOK, error)

	ProcessNotification(params *ProcessNotificationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ProcessNotificationOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
BuildComboFormDescriptor combos API to generate form data to redirect the customer to the gateway
*/
func (a *Client) BuildComboFormDescriptor(params *BuildComboFormDescriptorParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BuildComboFormDescriptorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBuildComboFormDescriptorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "buildComboFormDescriptor",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentGateways/hosted/form",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &BuildComboFormDescriptorReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BuildComboFormDescriptorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for buildComboFormDescriptor: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
BuildFormDescriptor generates form data to redirect the customer to the gateway
*/
func (a *Client) BuildFormDescriptor(params *BuildFormDescriptorParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*BuildFormDescriptorOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewBuildFormDescriptorParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "buildFormDescriptor",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentGateways/hosted/form/{accountId}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &BuildFormDescriptorReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*BuildFormDescriptorOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for buildFormDescriptor: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
ProcessNotification processes a gateway notification

The response is built by the appropriate plugin
*/
func (a *Client) ProcessNotification(params *ProcessNotificationParams, authInfo runtime.ClientAuthInfoWriter, opts ...ClientOption) (*ProcessNotificationOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewProcessNotificationParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "processNotification",
		Method:             "POST",
		PathPattern:        "/1.0/kb/paymentGateways/notification/{pluginName}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"*/*"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &ProcessNotificationReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*ProcessNotificationOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for processNotification: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
